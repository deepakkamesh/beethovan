

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Mar  5 21:39:12 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	12F683
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 1.41
    23                           ; Generated 25/01/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC12F683 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  008C                     	;# 
    83  008E                     	;# 
    84  008F                     	;# 
    85  0090                     	;# 
    86  0092                     	;# 
    87  0095                     	;# 
    88  0095                     	;# 
    89  0096                     	;# 
    90  0096                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009A                     	;# 
    94  009B                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  0015                     _CCP1CON	set	21
   100  0013                     _CCPR1L	set	19
   101  0012                     _T2CON	set	18
   102  0010                     _T1CON	set	16
   103  0019                     _CMCON0	set	25
   104  001F                     _ADCON0	set	31
   105  000E                     _TMR1L	set	14
   106  000F                     _TMR1H	set	15
   107  0005                     _GPIO	set	5
   108  00D1                     _T1GSS	set	209
   109  0092                     _PR2	set	146
   110  0095                     _WPU	set	149
   111  0085                     _TRISIO	set	133
   112  009F                     _ANSEL	set	159
   113  008F                     _OSCCON	set	143
   114                           
   115                           ; #config settings
   116  0000                     
   117                           	psect	cinit
   118  07FC                     start_initialization:	
   119  07FC                     __initialization:	
   120                           
   121                           ; Clear objects allocated to BITBANK0
   122  07FC  1283               	bcf	3,5	;RP0=0, select bank0
   123  07FD  01E9               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   124  07FE                     end_of_initialization:	
   125                           ;End of C runtime variable initialization code
   126                           
   127  07FE                     __end_of__initialization:	
   128  07FE  0183               	clrf	3
   129  07FF  2AE6               	ljmp	_main	;jump to C main() function
   130                           
   131                           	psect	bitbssBANK0
   132  0348                     __pbitbssBANK0:	
   133  0348                     main@trig:	
   134  0348                     	ds	1
   135  0349                     main@got_dist:	
   136  0349                     	ds	1
   137  034A                     main@t1gp_high:	
   138  034A                     	ds	1
   139                           
   140                           	psect	cstackBANK1
   141  00A0                     __pcstackBANK1:	
   142  00A0                     pwmGenerator@period:	
   143                           
   144                           ; 3 bytes @ 0x0
   145  00A0                     	ds	3
   146  00A3                     pwmGenerator@duty:	
   147                           
   148                           ; 3 bytes @ 0x3
   149  00A3                     	ds	3
   150  00A6                     pwmGenerator@tosc:	
   151                           
   152                           ; 3 bytes @ 0x6
   153  00A6                     	ds	3
   154  00A9                     pwmGenerator@lsb:	
   155                           
   156                           ; 2 bytes @ 0x9
   157  00A9                     	ds	2
   158  00AB                     _pwmGenerator$449:	
   159                           
   160                           ; 3 bytes @ 0xB
   161  00AB                     	ds	3
   162  00AE                     pwmGenerator@ccp:	
   163                           
   164                           ; 2 bytes @ 0xE
   165  00AE                     	ds	2
   166  00B0                     pwmGenerator@pr2:	
   167                           
   168                           ; 2 bytes @ 0x10
   169  00B0                     	ds	2
   170  00B2                     pwmGenerator@scaler:	
   171                           
   172                           ; 2 bytes @ 0x12
   173  00B2                     	ds	2
   174                           
   175                           	psect	cstackCOMMON
   176  0070                     __pcstackCOMMON:	
   177  0070                     ?_init:	
   178  0070                     ??_init:	
   179                           ; 1 bytes @ 0x0
   180                           
   181  0070                     ?_main:	
   182                           ; 1 bytes @ 0x0
   183                           
   184  0070                     ?___wmul:	
   185                           ; 1 bytes @ 0x0
   186                           
   187  0070                     ?___ftpack:	
   188                           ; 2 bytes @ 0x0
   189                           
   190  0070                     ___wmul@multiplier:	
   191                           ; 3 bytes @ 0x0
   192                           
   193  0070                     ___ftpack@arg:	
   194                           ; 2 bytes @ 0x0
   195                           
   196                           
   197                           ; 3 bytes @ 0x0
   198  0070                     	ds	2
   199  0072                     ___wmul@multiplicand:	
   200                           
   201                           ; 2 bytes @ 0x2
   202  0072                     	ds	1
   203  0073                     ___ftpack@exp:	
   204                           
   205                           ; 1 bytes @ 0x3
   206  0073                     	ds	1
   207  0074                     ??___wmul:	
   208  0074                     ___ftpack@sign:	
   209                           ; 1 bytes @ 0x4
   210                           
   211  0074                     ___wmul@product:	
   212                           ; 1 bytes @ 0x4
   213                           
   214                           
   215                           ; 2 bytes @ 0x4
   216  0074                     	ds	1
   217  0075                     ??___ftpack:	
   218                           
   219                           ; 1 bytes @ 0x5
   220  0075                     	ds	3
   221  0078                     ?___awtoft:	
   222  0078                     ?___lwtoft:	
   223                           ; 3 bytes @ 0x8
   224                           
   225  0078                     ___awtoft@c:	
   226                           ; 3 bytes @ 0x8
   227                           
   228  0078                     ___lwtoft@c:	
   229                           ; 2 bytes @ 0x8
   230                           
   231                           
   232                           ; 2 bytes @ 0x8
   233  0078                     	ds	3
   234  007B                     ??___awtoft:	
   235  007B                     ??___lwtoft:	
   236                           ; 1 bytes @ 0xB
   237                           
   238                           
   239                           ; 1 bytes @ 0xB
   240  007B                     	ds	2
   241  007D                     ___awtoft@sign:	
   242                           
   243                           ; 1 bytes @ 0xD
   244  007D                     	ds	1
   245                           
   246                           	psect	cstackBANK0
   247  0020                     __pcstackBANK0:	
   248  0020                     ?___ftmul:	
   249  0020                     ___ftmul@f1:	
   250                           ; 3 bytes @ 0x0
   251                           
   252                           
   253                           ; 3 bytes @ 0x0
   254  0020                     	ds	3
   255  0023                     ___ftmul@f2:	
   256                           
   257                           ; 3 bytes @ 0x3
   258  0023                     	ds	3
   259  0026                     ??___ftmul:	
   260                           
   261                           ; 1 bytes @ 0x6
   262  0026                     	ds	4
   263  002A                     ___ftmul@exp:	
   264                           
   265                           ; 1 bytes @ 0xA
   266  002A                     	ds	1
   267  002B                     ___ftmul@f3_as_product:	
   268                           
   269                           ; 3 bytes @ 0xB
   270  002B                     	ds	3
   271  002E                     ___ftmul@cntr:	
   272                           
   273                           ; 1 bytes @ 0xE
   274  002E                     	ds	1
   275  002F                     ___ftmul@sign:	
   276                           
   277                           ; 1 bytes @ 0xF
   278  002F                     	ds	1
   279  0030                     ?___ftdiv:	
   280  0030                     ___ftdiv@f2:	
   281                           ; 3 bytes @ 0x10
   282                           
   283                           
   284                           ; 3 bytes @ 0x10
   285  0030                     	ds	3
   286  0033                     ___ftdiv@f1:	
   287                           
   288                           ; 3 bytes @ 0x13
   289  0033                     	ds	3
   290  0036                     ??___ftdiv:	
   291                           
   292                           ; 1 bytes @ 0x16
   293  0036                     	ds	4
   294  003A                     ___ftdiv@cntr:	
   295                           
   296                           ; 1 bytes @ 0x1A
   297  003A                     	ds	1
   298  003B                     ___ftdiv@f3:	
   299                           
   300                           ; 3 bytes @ 0x1B
   301  003B                     	ds	3
   302  003E                     ___ftdiv@exp:	
   303                           
   304                           ; 1 bytes @ 0x1E
   305  003E                     	ds	1
   306  003F                     ___ftdiv@sign:	
   307                           
   308                           ; 1 bytes @ 0x1F
   309  003F                     	ds	1
   310  0040                     ?___ftadd:	
   311  0040                     ___ftadd@f1:	
   312                           ; 3 bytes @ 0x20
   313                           
   314                           
   315                           ; 3 bytes @ 0x20
   316  0040                     	ds	3
   317  0043                     ___ftadd@f2:	
   318                           
   319                           ; 3 bytes @ 0x23
   320  0043                     	ds	3
   321  0046                     ??___ftadd:	
   322                           
   323                           ; 1 bytes @ 0x26
   324  0046                     	ds	4
   325  004A                     ___ftadd@sign:	
   326                           
   327                           ; 1 bytes @ 0x2A
   328  004A                     	ds	1
   329  004B                     ___ftadd@exp2:	
   330                           
   331                           ; 1 bytes @ 0x2B
   332  004B                     	ds	1
   333  004C                     ___ftadd@exp1:	
   334                           
   335                           ; 1 bytes @ 0x2C
   336  004C                     	ds	1
   337  004D                     ?___fttol:	
   338  004D                     ___fttol@f1:	
   339                           ; 4 bytes @ 0x2D
   340                           
   341                           
   342                           ; 3 bytes @ 0x2D
   343  004D                     	ds	4
   344  0051                     ??___fttol:	
   345                           
   346                           ; 1 bytes @ 0x31
   347  0051                     	ds	4
   348  0055                     ___fttol@sign1:	
   349                           
   350                           ; 1 bytes @ 0x35
   351  0055                     	ds	1
   352  0056                     ___fttol@lval:	
   353                           
   354                           ; 4 bytes @ 0x36
   355  0056                     	ds	4
   356  005A                     ___fttol@exp1:	
   357                           
   358                           ; 1 bytes @ 0x3A
   359  005A                     	ds	1
   360  005B                     ?_pwmGenerator:	
   361  005B                     pwmGenerator@freq:	
   362                           ; 2 bytes @ 0x3B
   363                           
   364                           
   365                           ; 2 bytes @ 0x3B
   366  005B                     	ds	2
   367  005D                     ??_pwmGenerator:	
   368                           
   369                           ; 1 bytes @ 0x3D
   370  005D                     	ds	2
   371  005F                     ??_main:	
   372                           
   373                           ; 1 bytes @ 0x3F
   374  005F                     	ds	6
   375  0065                     main@dist:	
   376                           
   377                           ; 2 bytes @ 0x45
   378  0065                     	ds	2
   379  0067                     main@pulse_width:	
   380                           
   381                           ; 2 bytes @ 0x47
   382  0067                     	ds	2
   383                           
   384                           	psect	maintext
   385  02E6                     __pmaintext:	
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 36 in file "main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  pulse_width     2   71[BANK0 ] unsigned int 
   396 ;;  dist            2   69[BANK0 ] unsigned int 
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : B00/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1
   406 ;;      Params:         0       0       0
   407 ;;      Locals:         0       4       0
   408 ;;      Temps:          0       6       0
   409 ;;      Totals:         0      10       0
   410 ;;Total ram usage:       10 bytes
   411 ;; Hardware stack levels required when called:    3
   412 ;; This function calls:
   413 ;;		___ftdiv
   414 ;;		___fttol
   415 ;;		___lwtoft
   416 ;;		___wmul
   417 ;;		_init
   418 ;;		_pwmGenerator
   419 ;; This function is called by:
   420 ;;		Startup code after reset
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           
   425                           ;psect for function _main
   426  02E6                     _main:	
   427                           
   428                           ;main.c: 37: init();
   429                           
   430                           ;incstack = 0
   431                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   432  02E6  2224               	fcall	_init
   433                           
   434                           ;main.c: 49: static bit t1gp_high, got_dist, trig;
   435                           ;main.c: 50: unsigned int pulse_width, dist = 0;
   436  02E7  1283               	bcf	3,5	;RP0=0, select bank0
   437  02E8  01E5               	clrf	main@dist
   438  02E9  01E6               	clrf	main@dist+1
   439                           
   440                           ;main.c: 51: t1gp_high = 0;
   441  02EA  1169               	bcf	main@t1gp_high/(0+8),main@t1gp_high& (0+7)
   442                           
   443                           ;main.c: 52: got_dist = 0;
   444  02EB  10E9               	bcf	main@got_dist/(0+8),main@got_dist& (0+7)
   445                           
   446                           ;main.c: 53: trig = 0;
   447  02EC  1069               	bcf	main@trig/(0+8),main@trig& (0+7)
   448  02ED                     l1299:	
   449                           ;main.c: 56: while (1) {
   450                           
   451                           
   452                           ;main.c: 59: if (!trig && t1gp_high == 0 && !(GPIO & 0x10)) {
   453  02ED  1283               	bcf	3,5	;RP0=0, select bank0
   454  02EE  1C69               	btfss	main@trig/(0+8),main@trig& (0+7)
   455  02EF  1969               	btfsc	main@t1gp_high/(0+8),main@t1gp_high& (0+7)
   456  02F0  2B00               	goto	l1313
   457  02F1  1A05               	btfsc	5,4	;volatile
   458  02F2  2B00               	goto	l1313
   459                           
   460                           ;main.c: 60: GPIO |= 0x20;
   461  02F3  1685               	bsf	5,5	;volatile
   462                           
   463                           ;main.c: 61: _delay((unsigned long)((10)*(4000000/4000000.0)));
   464  02F4  3002               	movlw	2
   465  02F5  1283               	bcf	3,5	;RP0=0, select bank0
   466  02F6  00DF               	movwf	??_main
   467  02F7                     u1737:	
   468  02F7  0BDF               	decfsz	??_main,f
   469  02F8  2AF7               	goto	u1737
   470  02F9  2AFA               	nop2
   471                           
   472                           ;main.c: 62: GPIO &= ~0x20;
   473  02FA  30DF               	movlw	223
   474  02FB  1283               	bcf	3,5	;RP0=0, select bank0
   475  02FC  00DF               	movwf	??_main
   476  02FD  085F               	movf	??_main,w
   477  02FE  0585               	andwf	5,f	;volatile
   478                           
   479                           ;main.c: 63: trig = 1;
   480  02FF  1469               	bsf	main@trig/(0+8),main@trig& (0+7)
   481  0300                     l1313:	
   482                           
   483                           ;main.c: 64: }
   484                           ;main.c: 68: if (t1gp_high == 0 && (GPIO & 0x10)) {
   485  0300  1D69               	btfss	main@t1gp_high/(0+8),main@t1gp_high& (0+7)
   486  0301  1E05               	btfss	5,4	;volatile
   487  0302  2B06               	goto	l1321
   488                           
   489                           ;main.c: 69: t1gp_high = 1;
   490  0303  1569               	bsf	main@t1gp_high/(0+8),main@t1gp_high& (0+7)
   491                           
   492                           ;main.c: 70: pulse_width = 0;
   493  0304  01E7               	clrf	main@pulse_width
   494  0305  01E8               	clrf	main@pulse_width+1
   495  0306                     l1321:	
   496                           
   497                           ;main.c: 71: }
   498                           ;main.c: 74: if (t1gp_high == 1 && !(GPIO & 0x10)) {
   499  0306  1969               	btfsc	main@t1gp_high/(0+8),main@t1gp_high& (0+7)
   500  0307  1A05               	btfsc	5,4	;volatile
   501  0308  2B24               	goto	l1335
   502                           
   503                           ;main.c: 75: pulse_width = TMR1H;
   504  0309  080F               	movf	15,w	;volatile
   505  030A  00DF               	movwf	??_main
   506  030B  01E0               	clrf	??_main+1
   507  030C  085F               	movf	??_main,w
   508  030D  00E7               	movwf	main@pulse_width
   509  030E  0860               	movf	??_main+1,w
   510  030F  00E8               	movwf	main@pulse_width+1
   511                           
   512                           ;main.c: 76: pulse_width = (pulse_width << 8) | TMR1L;
   513  0310  080E               	movf	14,w	;volatile
   514  0311  00DF               	movwf	??_main
   515  0312  01E0               	clrf	??_main+1
   516  0313  0867               	movf	main@pulse_width,w
   517  0314  00E2               	movwf	??_main+3
   518  0315  01E1               	clrf	??_main+2
   519  0316  085F               	movf	??_main,w
   520  0317  0461               	iorwf	??_main+2,w
   521  0318  00E3               	movwf	??_main+4
   522  0319  0860               	movf	??_main+1,w
   523  031A  0462               	iorwf	??_main+3,w
   524  031B  00E4               	movwf	??_main+5
   525  031C  0863               	movf	??_main+4,w
   526  031D  00E7               	movwf	main@pulse_width
   527  031E  0864               	movf	??_main+5,w
   528  031F  00E8               	movwf	main@pulse_width+1
   529                           
   530                           ;main.c: 77: TMR1L = 0;
   531  0320  018E               	clrf	14	;volatile
   532                           
   533                           ;main.c: 78: TMR1H = 0;
   534  0321  018F               	clrf	15	;volatile
   535                           
   536                           ;main.c: 79: t1gp_high = 0;
   537  0322  1169               	bcf	main@t1gp_high/(0+8),main@t1gp_high& (0+7)
   538                           
   539                           ;main.c: 80: got_dist = 1;
   540  0323  14E9               	bsf	main@got_dist/(0+8),main@got_dist& (0+7)
   541  0324                     l1335:	
   542                           
   543                           ;main.c: 81: }
   544                           ;main.c: 83: if (got_dist) {
   545  0324  1CE9               	btfss	main@got_dist/(0+8),main@got_dist& (0+7)
   546  0325  2AED               	goto	l1299
   547                           
   548                           ;main.c: 84: got_dist = 0;
   549  0326  10E9               	bcf	main@got_dist/(0+8),main@got_dist& (0+7)
   550                           
   551                           ;main.c: 85: trig = 0;
   552  0327  1069               	bcf	main@trig/(0+8),main@trig& (0+7)
   553                           
   554                           ;main.c: 86: dist = pulse_width / 58.82;
   555  0328  0868               	movf	main@pulse_width+1,w
   556  0329  00F9               	movwf	___lwtoft@c+1
   557  032A  0867               	movf	main@pulse_width,w
   558  032B  00F8               	movwf	___lwtoft@c
   559  032C  2212               	fcall	___lwtoft
   560  032D  0878               	movf	?___lwtoft,w
   561  032E  1283               	bcf	3,5	;RP0=0, select bank0
   562  032F  00B3               	movwf	___ftdiv@f1
   563  0330  0879               	movf	?___lwtoft+1,w
   564  0331  00B4               	movwf	___ftdiv@f1+1
   565  0332  087A               	movf	?___lwtoft+2,w
   566  0333  00B5               	movwf	___ftdiv@f1+2
   567  0334  3048               	movlw	72
   568  0335  00B0               	movwf	___ftdiv@f2
   569  0336  306B               	movlw	107
   570  0337  00B1               	movwf	___ftdiv@f2+1
   571  0338  3042               	movlw	66
   572  0339  00B2               	movwf	___ftdiv@f2+2
   573  033A  23EF               	fcall	___ftdiv
   574  033B  1283               	bcf	3,5	;RP0=0, select bank0
   575  033C  0830               	movf	?___ftdiv,w
   576  033D  00CD               	movwf	___fttol@f1
   577  033E  0831               	movf	?___ftdiv+1,w
   578  033F  00CE               	movwf	___fttol@f1+1
   579  0340  0832               	movf	?___ftdiv+2,w
   580  0341  00CF               	movwf	___fttol@f1+2
   581  0342  2362               	fcall	___fttol
   582  0343  1283               	bcf	3,5	;RP0=0, select bank0
   583  0344  084E               	movf	?___fttol+1,w
   584  0345  00E6               	movwf	main@dist+1
   585  0346  084D               	movf	?___fttol,w
   586  0347  00E5               	movwf	main@dist
   587                           
   588                           ;main.c: 87: pwmGenerator(dist*10);
   589  0348  0866               	movf	main@dist+1,w
   590  0349  00F1               	movwf	___wmul@multiplier+1
   591  034A  0865               	movf	main@dist,w
   592  034B  00F0               	movwf	___wmul@multiplier
   593  034C  300A               	movlw	10
   594  034D  00F2               	movwf	___wmul@multiplicand
   595  034E  3000               	movlw	0
   596  034F  00F3               	movwf	___wmul@multiplicand+1
   597  0350  2259               	fcall	___wmul
   598  0351  0871               	movf	?___wmul+1,w
   599  0352  1283               	bcf	3,5	;RP0=0, select bank0
   600  0353  00DC               	movwf	pwmGenerator@freq+1
   601  0354  0870               	movf	?___wmul,w
   602  0355  00DB               	movwf	pwmGenerator@freq
   603  0356  2677               	fcall	_pwmGenerator
   604                           
   605                           ;main.c: 88: _delay((unsigned long)((100)*(4000000/4000.0)));
   606  0357  3082               	movlw	130
   607  0358  1283               	bcf	3,5	;RP0=0, select bank0
   608  0359  00E0               	movwf	??_main+1
   609  035A  30DD               	movlw	221
   610  035B  00DF               	movwf	??_main
   611  035C                     u1747:	
   612  035C  0BDF               	decfsz	??_main,f
   613  035D  2B5C               	goto	u1747
   614  035E  0BE0               	decfsz	??_main+1,f
   615  035F  2B5C               	goto	u1747
   616  0360  0000               	nop
   617  0361  2AED               	goto	l1299
   618  0362                     __end_of_main:	
   619                           ;main.c: 89: }
   620                           ;main.c: 92: }
   621                           ;main.c: 94: return;
   622                           
   623                           
   624                           	psect	text1
   625  0677                     __ptext1:	
   626 ;; *************** function _pwmGenerator *****************
   627 ;; Defined at:
   628 ;;		line 120 in file "main.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;  freq            2   59[BANK0 ] int 
   631 ;; Auto vars:     Size  Location     Type
   632 ;;  lsb             2    9[BANK1 ] int 
   633 ;;  tosc            3    6[BANK1 ] float 
   634 ;;  duty            3    3[BANK1 ] float 
   635 ;;  period          3    0[BANK1 ] float 
   636 ;;  scaler          2   18[BANK1 ] int 
   637 ;;  pr2             2   16[BANK1 ] int 
   638 ;;  ccp             2   14[BANK1 ] int 
   639 ;; Return value:  Size  Location     Type
   640 ;;                  2   59[BANK0 ] int 
   641 ;; Registers used:
   642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1
   648 ;;      Params:         0       2       0
   649 ;;      Locals:         0       0      20
   650 ;;      Temps:          0       2       0
   651 ;;      Totals:         0       4      20
   652 ;;Total ram usage:       24 bytes
   653 ;; Hardware stack levels used:    1
   654 ;; Hardware stack levels required when called:    2
   655 ;; This function calls:
   656 ;;		___awtoft
   657 ;;		___ftadd
   658 ;;		___ftdiv
   659 ;;		___ftmul
   660 ;;		___fttol
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           
   667                           ;psect for function _pwmGenerator
   668  0677                     _pwmGenerator:	
   669                           
   670                           ;main.c: 121: float period, tosc = 0;
   671                           
   672                           ;incstack = 0
   673                           ; Regs used in _pwmGenerator: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   674  0677  3000               	movlw	0
   675  0678  1683               	bsf	3,5	;RP0=1, select bank1
   676  0679  00A6               	movwf	pwmGenerator@tosc^(0+128)
   677  067A  3000               	movlw	0
   678  067B  00A7               	movwf	(pwmGenerator@tosc+1)^(0+128)
   679  067C  3000               	movlw	0
   680  067D  00A8               	movwf	(pwmGenerator@tosc+2)^(0+128)
   681                           
   682                           ;main.c: 122: int pr2, scaler, ccp;
   683                           ;main.c: 123: float duty = 0.5;
   684  067E  3000               	movlw	0
   685  067F  00A3               	movwf	pwmGenerator@duty^(0+128)
   686  0680  3000               	movlw	0
   687  0681  00A4               	movwf	(pwmGenerator@duty+1)^(0+128)
   688  0682  303F               	movlw	63
   689  0683  00A5               	movwf	(pwmGenerator@duty+2)^(0+128)
   690                           
   691                           ;main.c: 125: period = 1 / (float) freq;
   692  0684  1283               	bcf	3,5	;RP0=0, select bank0
   693  0685  085C               	movf	pwmGenerator@freq+1,w
   694  0686  00F9               	movwf	___awtoft@c+1
   695  0687  085B               	movf	pwmGenerator@freq,w
   696  0688  00F8               	movwf	___awtoft@c
   697  0689  223A               	fcall	___awtoft
   698  068A  0878               	movf	?___awtoft,w
   699  068B  1283               	bcf	3,5	;RP0=0, select bank0
   700  068C  00B0               	movwf	___ftdiv@f2
   701  068D  0879               	movf	?___awtoft+1,w
   702  068E  00B1               	movwf	___ftdiv@f2+1
   703  068F  087A               	movf	?___awtoft+2,w
   704  0690  00B2               	movwf	___ftdiv@f2+2
   705  0691  3000               	movlw	0
   706  0692  00B3               	movwf	___ftdiv@f1
   707  0693  3080               	movlw	128
   708  0694  00B4               	movwf	___ftdiv@f1+1
   709  0695  303F               	movlw	63
   710  0696  00B5               	movwf	___ftdiv@f1+2
   711  0697  23EF               	fcall	___ftdiv
   712  0698  1283               	bcf	3,5	;RP0=0, select bank0
   713  0699  0830               	movf	?___ftdiv,w
   714  069A  1683               	bsf	3,5	;RP0=1, select bank1
   715  069B  00A0               	movwf	pwmGenerator@period^(0+128)
   716  069C  1283               	bcf	3,5	;RP0=0, select bank0
   717  069D  0831               	movf	?___ftdiv+1,w
   718  069E  1683               	bsf	3,5	;RP0=1, select bank1
   719  069F  00A1               	movwf	(pwmGenerator@period+1)^(0+128)
   720  06A0  1283               	bcf	3,5	;RP0=0, select bank0
   721  06A1  0832               	movf	?___ftdiv+2,w
   722  06A2  1683               	bsf	3,5	;RP0=1, select bank1
   723  06A3  00A2               	movwf	(pwmGenerator@period+2)^(0+128)
   724                           
   725                           ;main.c: 126: tosc = 1 / (float) 4000000;
   726  06A4  3038               	movlw	56
   727  06A5  00A6               	movwf	pwmGenerator@tosc^(0+128)
   728  06A6  3086               	movlw	134
   729  06A7  00A7               	movwf	(pwmGenerator@tosc+1)^(0+128)
   730  06A8  3034               	movlw	52
   731  06A9  00A8               	movwf	(pwmGenerator@tosc+2)^(0+128)
   732                           
   733                           ;main.c: 129: for (scaler = 1; scaler <= 16; scaler = scaler * 4) {
   734  06AA  3001               	movlw	1
   735  06AB  00B2               	movwf	pwmGenerator@scaler^(0+128)
   736  06AC  3000               	movlw	0
   737  06AD  00B3               	movwf	(pwmGenerator@scaler^(0+128)+1)
   738  06AE  0833               	movf	(pwmGenerator@scaler+1)^(0+128),w
   739  06AF  3A80               	xorlw	128
   740  06B0  00FF               	movwf	127
   741  06B1  3080               	movlw	128
   742  06B2  027F               	subwf	127,w
   743  06B3  1D03               	skipz
   744  06B4  2EB7               	goto	u1565
   745  06B5  3011               	movlw	17
   746  06B6  0232               	subwf	pwmGenerator@scaler^(0+128),w
   747  06B7                     u1565:	
   748  06B7  1803               	btfsc	3,0
   749  06B8  2FA9               	goto	l1241
   750  06B9                     l1227:	
   751                           
   752                           ;main.c: 130: pr2 = period / (4 * tosc * scaler) - 1;
   753  06B9  1683               	bsf	3,5	;RP0=1, select bank1
   754  06BA  0833               	movf	(pwmGenerator@scaler+1)^(0+128),w
   755  06BB  00F9               	movwf	___awtoft@c+1
   756  06BC  0832               	movf	pwmGenerator@scaler^(0+128),w
   757  06BD  00F8               	movwf	___awtoft@c
   758  06BE  223A               	fcall	___awtoft
   759  06BF  0878               	movf	?___awtoft,w
   760  06C0  1283               	bcf	3,5	;RP0=0, select bank0
   761  06C1  00A3               	movwf	___ftmul@f2
   762  06C2  0879               	movf	?___awtoft+1,w
   763  06C3  00A4               	movwf	___ftmul@f2+1
   764  06C4  087A               	movf	?___awtoft+2,w
   765  06C5  00A5               	movwf	___ftmul@f2+2
   766  06C6  1683               	bsf	3,5	;RP0=1, select bank1
   767  06C7  0826               	movf	pwmGenerator@tosc^(0+128),w
   768  06C8  1283               	bcf	3,5	;RP0=0, select bank0
   769  06C9  00A0               	movwf	___ftmul@f1
   770  06CA  1683               	bsf	3,5	;RP0=1, select bank1
   771  06CB  0827               	movf	(pwmGenerator@tosc+1)^(0+128),w
   772  06CC  1283               	bcf	3,5	;RP0=0, select bank0
   773  06CD  00A1               	movwf	___ftmul@f1+1
   774  06CE  1683               	bsf	3,5	;RP0=1, select bank1
   775  06CF  0828               	movf	(pwmGenerator@tosc+2)^(0+128),w
   776  06D0  1283               	bcf	3,5	;RP0=0, select bank0
   777  06D1  00A2               	movwf	___ftmul@f1+2
   778  06D2  24A3               	fcall	___ftmul
   779  06D3  1283               	bcf	3,5	;RP0=0, select bank0
   780  06D4  0820               	movf	?___ftmul,w
   781  06D5  1683               	bsf	3,5	;RP0=1, select bank1
   782  06D6  00AB               	movwf	_pwmGenerator$449^(0+128)
   783  06D7  1283               	bcf	3,5	;RP0=0, select bank0
   784  06D8  0821               	movf	?___ftmul+1,w
   785  06D9  1683               	bsf	3,5	;RP0=1, select bank1
   786  06DA  00AC               	movwf	(_pwmGenerator$449+1)^(0+128)
   787  06DB  1283               	bcf	3,5	;RP0=0, select bank0
   788  06DC  0822               	movf	?___ftmul+2,w
   789  06DD  1683               	bsf	3,5	;RP0=1, select bank1
   790  06DE  00AD               	movwf	(_pwmGenerator$449+2)^(0+128)
   791                           
   792                           ;main.c: 130: pr2 = period / (4 * tosc * scaler) - 1;
   793  06DF  0820               	movf	pwmGenerator@period^(0+128),w
   794  06E0  1283               	bcf	3,5	;RP0=0, select bank0
   795  06E1  00B3               	movwf	___ftdiv@f1
   796  06E2  1683               	bsf	3,5	;RP0=1, select bank1
   797  06E3  0821               	movf	(pwmGenerator@period+1)^(0+128),w
   798  06E4  1283               	bcf	3,5	;RP0=0, select bank0
   799  06E5  00B4               	movwf	___ftdiv@f1+1
   800  06E6  1683               	bsf	3,5	;RP0=1, select bank1
   801  06E7  0822               	movf	(pwmGenerator@period+2)^(0+128),w
   802  06E8  1283               	bcf	3,5	;RP0=0, select bank0
   803  06E9  00B5               	movwf	___ftdiv@f1+2
   804  06EA  1683               	bsf	3,5	;RP0=1, select bank1
   805  06EB  082B               	movf	_pwmGenerator$449^(0+128),w
   806  06EC  1283               	bcf	3,5	;RP0=0, select bank0
   807  06ED  00A3               	movwf	___ftmul@f2
   808  06EE  1683               	bsf	3,5	;RP0=1, select bank1
   809  06EF  082C               	movf	(_pwmGenerator$449+1)^(0+128),w
   810  06F0  1283               	bcf	3,5	;RP0=0, select bank0
   811  06F1  00A4               	movwf	___ftmul@f2+1
   812  06F2  1683               	bsf	3,5	;RP0=1, select bank1
   813  06F3  082D               	movf	(_pwmGenerator$449+2)^(0+128),w
   814  06F4  1283               	bcf	3,5	;RP0=0, select bank0
   815  06F5  00A5               	movwf	___ftmul@f2+2
   816  06F6  3000               	movlw	0
   817  06F7  00A0               	movwf	___ftmul@f1
   818  06F8  3080               	movlw	128
   819  06F9  00A1               	movwf	___ftmul@f1+1
   820  06FA  3040               	movlw	64
   821  06FB  00A2               	movwf	___ftmul@f1+2
   822  06FC  24A3               	fcall	___ftmul
   823  06FD  1283               	bcf	3,5	;RP0=0, select bank0
   824  06FE  0820               	movf	?___ftmul,w
   825  06FF  00B0               	movwf	___ftdiv@f2
   826  0700  0821               	movf	?___ftmul+1,w
   827  0701  00B1               	movwf	___ftdiv@f2+1
   828  0702  0822               	movf	?___ftmul+2,w
   829  0703  00B2               	movwf	___ftdiv@f2+2
   830  0704  23EF               	fcall	___ftdiv
   831  0705  1283               	bcf	3,5	;RP0=0, select bank0
   832  0706  0830               	movf	?___ftdiv,w
   833  0707  00C3               	movwf	___ftadd@f2
   834  0708  0831               	movf	?___ftdiv+1,w
   835  0709  00C4               	movwf	___ftadd@f2+1
   836  070A  0832               	movf	?___ftdiv+2,w
   837  070B  00C5               	movwf	___ftadd@f2+2
   838  070C  3000               	movlw	0
   839  070D  00C0               	movwf	___ftadd@f1
   840  070E  3080               	movlw	128
   841  070F  00C1               	movwf	___ftadd@f1+1
   842  0710  30BF               	movlw	191
   843  0711  00C2               	movwf	___ftadd@f1+2
   844  0712  2572               	fcall	___ftadd
   845  0713  1283               	bcf	3,5	;RP0=0, select bank0
   846  0714  0840               	movf	?___ftadd,w
   847  0715  00CD               	movwf	___fttol@f1
   848  0716  0841               	movf	?___ftadd+1,w
   849  0717  00CE               	movwf	___fttol@f1+1
   850  0718  0842               	movf	?___ftadd+2,w
   851  0719  00CF               	movwf	___fttol@f1+2
   852  071A  2362               	fcall	___fttol
   853  071B  1283               	bcf	3,5	;RP0=0, select bank0
   854  071C  084E               	movf	?___fttol+1,w
   855  071D  1683               	bsf	3,5	;RP0=1, select bank1
   856  071E  00B1               	movwf	(pwmGenerator@pr2+1)^(0+128)
   857  071F  1283               	bcf	3,5	;RP0=0, select bank0
   858  0720  084D               	movf	?___fttol,w
   859  0721  1683               	bsf	3,5	;RP0=1, select bank1
   860  0722  00B0               	movwf	pwmGenerator@pr2^(0+128)
   861                           
   862                           ;main.c: 131: ccp = duty * 4 * (pr2 + 1);
   863  0723  0830               	movf	pwmGenerator@pr2^(0+128),w
   864  0724  3E01               	addlw	1
   865  0725  00F8               	movwf	___awtoft@c
   866  0726  0831               	movf	(pwmGenerator@pr2+1)^(0+128),w
   867  0727  1803               	skipnc
   868  0728  3E01               	addlw	1
   869  0729  3E00               	addlw	0
   870  072A  00F9               	movwf	___awtoft@c+1
   871  072B  223A               	fcall	___awtoft
   872  072C  0878               	movf	?___awtoft,w
   873  072D  1283               	bcf	3,5	;RP0=0, select bank0
   874  072E  00A3               	movwf	___ftmul@f2
   875  072F  0879               	movf	?___awtoft+1,w
   876  0730  00A4               	movwf	___ftmul@f2+1
   877  0731  087A               	movf	?___awtoft+2,w
   878  0732  00A5               	movwf	___ftmul@f2+2
   879  0733  1683               	bsf	3,5	;RP0=1, select bank1
   880  0734  0823               	movf	pwmGenerator@duty^(0+128),w
   881  0735  1283               	bcf	3,5	;RP0=0, select bank0
   882  0736  00A0               	movwf	___ftmul@f1
   883  0737  1683               	bsf	3,5	;RP0=1, select bank1
   884  0738  0824               	movf	(pwmGenerator@duty+1)^(0+128),w
   885  0739  1283               	bcf	3,5	;RP0=0, select bank0
   886  073A  00A1               	movwf	___ftmul@f1+1
   887  073B  1683               	bsf	3,5	;RP0=1, select bank1
   888  073C  0825               	movf	(pwmGenerator@duty+2)^(0+128),w
   889  073D  1283               	bcf	3,5	;RP0=0, select bank0
   890  073E  00A2               	movwf	___ftmul@f1+2
   891  073F  24A3               	fcall	___ftmul
   892  0740  1283               	bcf	3,5	;RP0=0, select bank0
   893  0741  0820               	movf	?___ftmul,w
   894  0742  1683               	bsf	3,5	;RP0=1, select bank1
   895  0743  00AB               	movwf	_pwmGenerator$449^(0+128)
   896  0744  1283               	bcf	3,5	;RP0=0, select bank0
   897  0745  0821               	movf	?___ftmul+1,w
   898  0746  1683               	bsf	3,5	;RP0=1, select bank1
   899  0747  00AC               	movwf	(_pwmGenerator$449+1)^(0+128)
   900  0748  1283               	bcf	3,5	;RP0=0, select bank0
   901  0749  0822               	movf	?___ftmul+2,w
   902  074A  1683               	bsf	3,5	;RP0=1, select bank1
   903  074B  00AD               	movwf	(_pwmGenerator$449+2)^(0+128)
   904                           
   905                           ;main.c: 131: ccp = duty * 4 * (pr2 + 1);
   906  074C  082B               	movf	_pwmGenerator$449^(0+128),w
   907  074D  1283               	bcf	3,5	;RP0=0, select bank0
   908  074E  00A3               	movwf	___ftmul@f2
   909  074F  1683               	bsf	3,5	;RP0=1, select bank1
   910  0750  082C               	movf	(_pwmGenerator$449+1)^(0+128),w
   911  0751  1283               	bcf	3,5	;RP0=0, select bank0
   912  0752  00A4               	movwf	___ftmul@f2+1
   913  0753  1683               	bsf	3,5	;RP0=1, select bank1
   914  0754  082D               	movf	(_pwmGenerator$449+2)^(0+128),w
   915  0755  1283               	bcf	3,5	;RP0=0, select bank0
   916  0756  00A5               	movwf	___ftmul@f2+2
   917  0757  3000               	movlw	0
   918  0758  00A0               	movwf	___ftmul@f1
   919  0759  3080               	movlw	128
   920  075A  00A1               	movwf	___ftmul@f1+1
   921  075B  3040               	movlw	64
   922  075C  00A2               	movwf	___ftmul@f1+2
   923  075D  24A3               	fcall	___ftmul
   924  075E  1283               	bcf	3,5	;RP0=0, select bank0
   925  075F  0820               	movf	?___ftmul,w
   926  0760  00CD               	movwf	___fttol@f1
   927  0761  0821               	movf	?___ftmul+1,w
   928  0762  00CE               	movwf	___fttol@f1+1
   929  0763  0822               	movf	?___ftmul+2,w
   930  0764  00CF               	movwf	___fttol@f1+2
   931  0765  2362               	fcall	___fttol
   932  0766  1283               	bcf	3,5	;RP0=0, select bank0
   933  0767  084E               	movf	?___fttol+1,w
   934  0768  1683               	bsf	3,5	;RP0=1, select bank1
   935  0769  00AF               	movwf	(pwmGenerator@ccp+1)^(0+128)
   936  076A  1283               	bcf	3,5	;RP0=0, select bank0
   937  076B  084D               	movf	?___fttol,w
   938  076C  1683               	bsf	3,5	;RP0=1, select bank1
   939  076D  00AE               	movwf	pwmGenerator@ccp^(0+128)
   940                           
   941                           ;main.c: 133: if (pr2 <= 255 && ccp <= 1023) {
   942  076E  0831               	movf	(pwmGenerator@pr2+1)^(0+128),w
   943  076F  3A80               	xorlw	128
   944  0770  00FF               	movwf	127
   945  0771  3081               	movlw	129
   946  0772  027F               	subwf	127,w
   947  0773  1D03               	skipz
   948  0774  2F77               	goto	u1575
   949  0775  3000               	movlw	0
   950  0776  0230               	subwf	pwmGenerator@pr2^(0+128),w
   951  0777                     u1575:	
   952  0777  1803               	skipnc
   953  0778  2F85               	goto	l1235
   954  0779  1683               	bsf	3,5	;RP0=1, select bank1
   955  077A  082F               	movf	(pwmGenerator@ccp+1)^(0+128),w
   956  077B  3A80               	xorlw	128
   957  077C  00FF               	movwf	127
   958  077D  3084               	movlw	132
   959  077E  027F               	subwf	127,w
   960  077F  1D03               	skipz
   961  0780  2F83               	goto	u1585
   962  0781  3000               	movlw	0
   963  0782  022E               	subwf	pwmGenerator@ccp^(0+128),w
   964  0783                     u1585:	
   965  0783  1C03               	btfss	3,0
   966  0784  2FA9               	goto	l1241
   967  0785                     l1235:	
   968                           ;main.c: 134: break;
   969                           
   970                           
   971                           ;main.c: 135: }
   972                           ;main.c: 136: pr2 = 0;
   973  0785  1683               	bsf	3,5	;RP0=1, select bank1
   974  0786  01B0               	clrf	pwmGenerator@pr2^(0+128)
   975  0787  01B1               	clrf	(pwmGenerator@pr2+1)^(0+128)
   976                           
   977                           ;main.c: 137: ccp = 0;
   978  0788  01AE               	clrf	pwmGenerator@ccp^(0+128)
   979  0789  01AF               	clrf	(pwmGenerator@ccp+1)^(0+128)
   980  078A  0833               	movf	(pwmGenerator@scaler+1)^(0+128),w
   981  078B  1283               	bcf	3,5	;RP0=0, select bank0
   982  078C  00DE               	movwf	??_pwmGenerator+1
   983  078D  1683               	bsf	3,5	;RP0=1, select bank1
   984  078E  0832               	movf	pwmGenerator@scaler^(0+128),w
   985  078F  1283               	bcf	3,5	;RP0=0, select bank0
   986  0790  00DD               	movwf	??_pwmGenerator
   987  0791  1003               	clrc
   988  0792  0DDD               	rlf	??_pwmGenerator,f
   989  0793  0DDE               	rlf	??_pwmGenerator+1,f
   990  0794  1003               	clrc
   991  0795  0DDD               	rlf	??_pwmGenerator,f
   992  0796  0DDE               	rlf	??_pwmGenerator+1,f
   993  0797  085D               	movf	??_pwmGenerator,w
   994  0798  1683               	bsf	3,5	;RP0=1, select bank1
   995  0799  00B2               	movwf	pwmGenerator@scaler^(0+128)
   996  079A  1283               	bcf	3,5	;RP0=0, select bank0
   997  079B  085E               	movf	??_pwmGenerator+1,w
   998  079C  1683               	bsf	3,5	;RP0=1, select bank1
   999  079D  00B3               	movwf	(pwmGenerator@scaler+1)^(0+128)
  1000  079E  0833               	movf	(pwmGenerator@scaler+1)^(0+128),w
  1001  079F  3A80               	xorlw	128
  1002  07A0  00FF               	movwf	127
  1003  07A1  3080               	movlw	128
  1004  07A2  027F               	subwf	127,w
  1005  07A3  1D03               	skipz
  1006  07A4  2FA7               	goto	u1595
  1007  07A5  3011               	movlw	17
  1008  07A6  0232               	subwf	pwmGenerator@scaler^(0+128),w
  1009  07A7                     u1595:	
  1010  07A7  1C03               	skipc
  1011  07A8  2EB9               	goto	l1227
  1012  07A9                     l1241:	
  1013                           
  1014                           ;main.c: 138: }
  1015                           ;main.c: 140: if (pr2) {
  1016  07A9  1683               	bsf	3,5	;RP0=1, select bank1
  1017  07AA  0830               	movf	pwmGenerator@pr2^(0+128),w
  1018  07AB  0431               	iorwf	(pwmGenerator@pr2+1)^(0+128),w
  1019  07AC  1903               	btfsc	3,2
  1020  07AD  0008               	return
  1021                           
  1022                           ;main.c: 142: PR2 = pr2;
  1023  07AE  0830               	movf	pwmGenerator@pr2^(0+128),w
  1024  07AF  0092               	movwf	18	;volatile
  1025                           
  1026                           ;main.c: 145: switch (scaler) {
  1027  07B0  2FBA               	goto	l1255
  1028  07B1                     l1245:	
  1029                           ;main.c: 146: case 1:
  1030                           
  1031  07B1  2FB6               	goto	l1251
  1032  07B2                     l1247:	
  1033                           ;main.c: 149: case 4:
  1034                           
  1035                           ;main.c: 148: break;
  1036                           
  1037                           ;main.c: 147: T2CON = 0b00000100;
  1038                           
  1039                           
  1040                           ;main.c: 150: T2CON = 0b00000101;
  1041  07B2  3005               	movlw	5
  1042  07B3  2FB7               	goto	L3
  1043  07B4                     l1249:	
  1044                           ;main.c: 152: case 16:
  1045                           
  1046                           ;main.c: 151: break;
  1047                           
  1048                           
  1049                           ;main.c: 153: T2CON = 0b00000110;
  1050  07B4  3006               	movlw	6
  1051  07B5  2FB7               	goto	L3
  1052  07B6                     l1251:	
  1053                           ;main.c: 155: default:
  1054                           
  1055                           ;main.c: 154: break;
  1056                           
  1057                           
  1058                           ;main.c: 156: T2CON = 0b00000100;
  1059  07B6  3004               	movlw	4
  1060  07B7                     L3:	
  1061  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1062  07B8  0092               	movwf	18	;volatile
  1063                           
  1064                           ;main.c: 158: }
  1065                           
  1066                           ;main.c: 157: break;
  1067  07B9  2FCB               	goto	l1257
  1068  07BA                     l1255:	
  1069                           
  1070                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1071                           ; Switch size 1, requested type "space"
  1072                           ; Number of cases is 1, Range of values is 0 to 0
  1073                           ; switch strategies available:
  1074                           ; Name         Instructions Cycles
  1075                           ; simple_byte            4     3 (average)
  1076                           ; direct_byte            7     6 (fixed)
  1077                           ; jumptable            260     6 (fixed)
  1078                           ;	Chosen strategy is simple_byte
  1079  07BA  1683               	bsf	3,5	;RP0=1, select bank1
  1080  07BB  0833               	movf	(pwmGenerator@scaler+1)^(0+128),w
  1081  07BC  3A00               	xorlw	0	; case 0
  1082  07BD  1903               	skipnz
  1083  07BE  2FC0               	goto	l1365
  1084  07BF  2FB6               	goto	l1251
  1085  07C0                     l1365:	
  1086                           
  1087                           ; Switch size 1, requested type "space"
  1088                           ; Number of cases is 3, Range of values is 1 to 16
  1089                           ; switch strategies available:
  1090                           ; Name         Instructions Cycles
  1091                           ; simple_byte           10     6 (average)
  1092                           ; direct_byte           25     9 (fixed)
  1093                           ; jumptable            263     9 (fixed)
  1094                           ;	Chosen strategy is simple_byte
  1095  07C0  0832               	movf	pwmGenerator@scaler^(0+128),w
  1096  07C1  3A01               	xorlw	1	; case 1
  1097  07C2  1903               	skipnz
  1098  07C3  2FB1               	goto	l1245
  1099  07C4  3A05               	xorlw	5	; case 4
  1100  07C5  1903               	skipnz
  1101  07C6  2FB2               	goto	l1247
  1102  07C7  3A14               	xorlw	20	; case 16
  1103  07C8  1903               	skipnz
  1104  07C9  2FB4               	goto	l1249
  1105  07CA  2FB6               	goto	l1251
  1106  07CB                     l1257:	
  1107                           
  1108                           ;main.c: 160: int lsb = 0;
  1109  07CB  1683               	bsf	3,5	;RP0=1, select bank1
  1110  07CC  01A9               	clrf	pwmGenerator@lsb^(0+128)
  1111  07CD  01AA               	clrf	(pwmGenerator@lsb+1)^(0+128)
  1112                           
  1113                           ;main.c: 162: CCPR1L = ccp >> 2;
  1114  07CE  082F               	movf	(pwmGenerator@ccp+1)^(0+128),w
  1115  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  1116  07D0  00DE               	movwf	??_pwmGenerator+1
  1117  07D1  1683               	bsf	3,5	;RP0=1, select bank1
  1118  07D2  082E               	movf	pwmGenerator@ccp^(0+128),w
  1119  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1120  07D4  00DD               	movwf	??_pwmGenerator
  1121  07D5  0D5E               	rlf	??_pwmGenerator+1,w
  1122  07D6  0CDE               	rrf	??_pwmGenerator+1,f
  1123  07D7  0CDD               	rrf	??_pwmGenerator,f
  1124  07D8  0D5E               	rlf	??_pwmGenerator+1,w
  1125  07D9  0CDE               	rrf	??_pwmGenerator+1,f
  1126  07DA  0CDD               	rrf	??_pwmGenerator,f
  1127  07DB  085D               	movf	??_pwmGenerator,w
  1128  07DC  0093               	movwf	19	;volatile
  1129                           
  1130                           ;main.c: 163: lsb = (ccp & 11) << 4;
  1131  07DD  300B               	movlw	11
  1132  07DE  1683               	bsf	3,5	;RP0=1, select bank1
  1133  07DF  052E               	andwf	pwmGenerator@ccp^(0+128),w
  1134  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  1135  07E1  00DD               	movwf	??_pwmGenerator
  1136  07E2  3000               	movlw	0
  1137  07E3  1683               	bsf	3,5	;RP0=1, select bank1
  1138  07E4  052F               	andwf	(pwmGenerator@ccp+1)^(0+128),w
  1139  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1140  07E6  00DE               	movwf	??_pwmGenerator+1
  1141  07E7  0EDD               	swapf	??_pwmGenerator,f
  1142  07E8  0EDE               	swapf	??_pwmGenerator+1,f
  1143  07E9  30F0               	movlw	240
  1144  07EA  05DE               	andwf	??_pwmGenerator+1,f
  1145  07EB  085D               	movf	??_pwmGenerator,w
  1146  07EC  390F               	andlw	15
  1147  07ED  04DE               	iorwf	??_pwmGenerator+1,f
  1148  07EE  30F0               	movlw	240
  1149  07EF  05DD               	andwf	??_pwmGenerator,f
  1150  07F0  085D               	movf	??_pwmGenerator,w
  1151  07F1  1683               	bsf	3,5	;RP0=1, select bank1
  1152  07F2  00A9               	movwf	pwmGenerator@lsb^(0+128)
  1153  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  1154  07F4  085E               	movf	??_pwmGenerator+1,w
  1155  07F5  1683               	bsf	3,5	;RP0=1, select bank1
  1156  07F6  00AA               	movwf	(pwmGenerator@lsb+1)^(0+128)
  1157                           
  1158                           ;main.c: 166: CCP1CON = 0b00001100 | lsb;
  1159  07F7  0829               	movf	pwmGenerator@lsb^(0+128),w
  1160  07F8  380C               	iorlw	12
  1161  07F9  1283               	bcf	3,5	;RP0=0, select bank0
  1162  07FA  0095               	movwf	21	;volatile
  1163                           
  1164                           ;main.c: 167: return 1;
  1165                           ;	Return value of _pwmGenerator is never used
  1166  07FB  0008               	return
  1167  07FC                     __end_of_pwmGenerator:	
  1168                           ;main.c: 168: }
  1169                           ;main.c: 170: return 0;
  1170                           ;	Return value of _pwmGenerator is never used
  1171                           
  1172                           
  1173                           	psect	text2
  1174  0362                     __ptext2:	
  1175 ;; *************** function ___fttol *****************
  1176 ;; Defined at:
  1177 ;;		line 44 in file "/Applications/microchip/xc8/v1.41/sources/common/fttol.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  f1              3   45[BANK0 ] float 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  lval            4   54[BANK0 ] unsigned long 
  1182 ;;  exp1            1   58[BANK0 ] unsigned char 
  1183 ;;  sign1           1   53[BANK0 ] unsigned char 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  4   45[BANK0 ] long 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1
  1193 ;;      Params:         0       4       0
  1194 ;;      Locals:         0       6       0
  1195 ;;      Temps:          0       4       0
  1196 ;;      Totals:         0      14       0
  1197 ;;Total ram usage:       14 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;;		_pwmGenerator
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           
  1208                           ;psect for function ___fttol
  1209  0362                     ___fttol:	
  1210                           
  1211                           ;incstack = 0
  1212                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1213  0362  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0363  084D               	movf	___fttol@f1,w
  1215  0364  00D1               	movwf	??___fttol
  1216  0365  084E               	movf	___fttol@f1+1,w
  1217  0366  00D2               	movwf	??___fttol+1
  1218  0367  084F               	movf	___fttol@f1+2,w
  1219  0368  00D3               	movwf	??___fttol+2
  1220  0369  1003               	clrc
  1221  036A  0D52               	rlf	??___fttol+1,w
  1222  036B  0D53               	rlf	??___fttol+2,w
  1223  036C  00D4               	movwf	??___fttol+3
  1224  036D  0854               	movf	??___fttol+3,w
  1225  036E  00DA               	movwf	___fttol@exp1
  1226  036F  085A               	movf	___fttol@exp1,w
  1227  0370  1D03               	btfss	3,2
  1228  0371  2B7B               	goto	l1161
  1229  0372  3000               	movlw	0
  1230  0373  00D0               	movwf	?___fttol+3
  1231  0374  3000               	movlw	0
  1232  0375  00CF               	movwf	?___fttol+2
  1233  0376  3000               	movlw	0
  1234  0377  00CE               	movwf	?___fttol+1
  1235  0378  3000               	movlw	0
  1236  0379  00CD               	movwf	?___fttol
  1237  037A  0008               	return
  1238  037B                     l1161:	
  1239  037B  084D               	movf	___fttol@f1,w
  1240  037C  00D1               	movwf	??___fttol
  1241  037D  084E               	movf	___fttol@f1+1,w
  1242  037E  00D2               	movwf	??___fttol+1
  1243  037F  084F               	movf	___fttol@f1+2,w
  1244  0380  00D3               	movwf	??___fttol+2
  1245  0381  3017               	movlw	23
  1246  0382                     u1475:	
  1247  0382  1003               	clrc
  1248  0383  0CD3               	rrf	??___fttol+2,f
  1249  0384  0CD2               	rrf	??___fttol+1,f
  1250  0385  0CD1               	rrf	??___fttol,f
  1251  0386  3EFF               	addlw	-1
  1252  0387  1D03               	skipz
  1253  0388  2B82               	goto	u1475
  1254  0389  0851               	movf	??___fttol,w
  1255  038A  00D4               	movwf	??___fttol+3
  1256  038B  0854               	movf	??___fttol+3,w
  1257  038C  00D5               	movwf	___fttol@sign1
  1258  038D  17CE               	bsf	___fttol@f1+1,7
  1259  038E  30FF               	movlw	255
  1260  038F  05CD               	andwf	___fttol@f1,f
  1261  0390  30FF               	movlw	255
  1262  0391  05CE               	andwf	___fttol@f1+1,f
  1263  0392  3000               	movlw	0
  1264  0393  05CF               	andwf	___fttol@f1+2,f
  1265  0394  084D               	movf	___fttol@f1,w
  1266  0395  00D6               	movwf	___fttol@lval
  1267  0396  084E               	movf	___fttol@f1+1,w
  1268  0397  00D7               	movwf	___fttol@lval+1
  1269  0398  084F               	movf	___fttol@f1+2,w
  1270  0399  00D8               	movwf	___fttol@lval+2
  1271  039A  01D9               	clrf	___fttol@lval+3
  1272  039B  308E               	movlw	142
  1273  039C  02DA               	subwf	___fttol@exp1,f
  1274  039D  1FDA               	btfss	___fttol@exp1,7
  1275  039E  2BBD               	goto	l1181
  1276  039F  085A               	movf	___fttol@exp1,w
  1277  03A0  3A80               	xorlw	128
  1278  03A1  3E8F               	addlw	143
  1279  03A2  1803               	skipnc
  1280  03A3  2BAD               	goto	l1179
  1281  03A4  3000               	movlw	0
  1282  03A5  00D0               	movwf	?___fttol+3
  1283  03A6  3000               	movlw	0
  1284  03A7  00CF               	movwf	?___fttol+2
  1285  03A8  3000               	movlw	0
  1286  03A9  00CE               	movwf	?___fttol+1
  1287  03AA  3000               	movlw	0
  1288  03AB  00CD               	movwf	?___fttol
  1289  03AC  0008               	return
  1290  03AD                     l1179:	
  1291  03AD  3001               	movlw	1
  1292  03AE                     u1505:	
  1293  03AE  1003               	clrc
  1294  03AF  0CD9               	rrf	___fttol@lval+3,f
  1295  03B0  0CD8               	rrf	___fttol@lval+2,f
  1296  03B1  0CD7               	rrf	___fttol@lval+1,f
  1297  03B2  0CD6               	rrf	___fttol@lval,f
  1298  03B3  3EFF               	addlw	-1
  1299  03B4  1D03               	skipz
  1300  03B5  2BAE               	goto	u1505
  1301  03B6  3001               	movlw	1
  1302  03B7  00D1               	movwf	??___fttol
  1303  03B8  0851               	movf	??___fttol,w
  1304  03B9  07DA               	addwf	___fttol@exp1,f
  1305  03BA  1903               	btfsc	3,2
  1306  03BB  2BD8               	goto	l1189
  1307  03BC  2BAD               	goto	l1179
  1308  03BD                     l1181:	
  1309  03BD  3018               	movlw	24
  1310  03BE  025A               	subwf	___fttol@exp1,w
  1311  03BF  1C03               	skipc
  1312  03C0  2BD5               	goto	l407
  1313  03C1  3000               	movlw	0
  1314  03C2  00D0               	movwf	?___fttol+3
  1315  03C3  3000               	movlw	0
  1316  03C4  00CF               	movwf	?___fttol+2
  1317  03C5  3000               	movlw	0
  1318  03C6  00CE               	movwf	?___fttol+1
  1319  03C7  3000               	movlw	0
  1320  03C8  00CD               	movwf	?___fttol
  1321  03C9  0008               	return
  1322  03CA                     l1187:	
  1323  03CA  3001               	movlw	1
  1324  03CB  00D1               	movwf	??___fttol
  1325  03CC                     u1535:	
  1326  03CC  1003               	clrc
  1327  03CD  0DD6               	rlf	___fttol@lval,f
  1328  03CE  0DD7               	rlf	___fttol@lval+1,f
  1329  03CF  0DD8               	rlf	___fttol@lval+2,f
  1330  03D0  0DD9               	rlf	___fttol@lval+3,f
  1331  03D1  0BD1               	decfsz	??___fttol,f
  1332  03D2  2BCC               	goto	u1535
  1333  03D3  3001               	movlw	1
  1334  03D4  02DA               	subwf	___fttol@exp1,f
  1335  03D5                     l407:	
  1336  03D5  085A               	movf	___fttol@exp1,w
  1337  03D6  1D03               	btfss	3,2
  1338  03D7  2BCA               	goto	l1187
  1339  03D8                     l1189:	
  1340  03D8  0855               	movf	___fttol@sign1,w
  1341  03D9  1903               	btfsc	3,2
  1342  03DA  2BE6               	goto	l1193
  1343  03DB  09D6               	comf	___fttol@lval,f
  1344  03DC  09D7               	comf	___fttol@lval+1,f
  1345  03DD  09D8               	comf	___fttol@lval+2,f
  1346  03DE  09D9               	comf	___fttol@lval+3,f
  1347  03DF  0AD6               	incf	___fttol@lval,f
  1348  03E0  1903               	skipnz
  1349  03E1  0AD7               	incf	___fttol@lval+1,f
  1350  03E2  1903               	skipnz
  1351  03E3  0AD8               	incf	___fttol@lval+2,f
  1352  03E4  1903               	skipnz
  1353  03E5  0AD9               	incf	___fttol@lval+3,f
  1354  03E6                     l1193:	
  1355  03E6  0859               	movf	___fttol@lval+3,w
  1356  03E7  00D0               	movwf	?___fttol+3
  1357  03E8  0858               	movf	___fttol@lval+2,w
  1358  03E9  00CF               	movwf	?___fttol+2
  1359  03EA  0857               	movf	___fttol@lval+1,w
  1360  03EB  00CE               	movwf	?___fttol+1
  1361  03EC  0856               	movf	___fttol@lval,w
  1362  03ED  00CD               	movwf	?___fttol
  1363  03EE  0008               	return
  1364  03EF                     __end_of___fttol:	
  1365                           
  1366                           	psect	text3
  1367  04A3                     __ptext3:	
  1368 ;; *************** function ___ftmul *****************
  1369 ;; Defined at:
  1370 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/ftmul.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  f1              3    0[BANK0 ] float 
  1373 ;;  f2              3    3[BANK0 ] float 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  1376 ;;  sign            1   15[BANK0 ] unsigned char 
  1377 ;;  cntr            1   14[BANK0 ] unsigned char 
  1378 ;;  exp             1   10[BANK0 ] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  3    0[BANK0 ] float 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0, pclath, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1
  1388 ;;      Params:         0       6       0
  1389 ;;      Locals:         0       6       0
  1390 ;;      Temps:          0       4       0
  1391 ;;      Totals:         0      16       0
  1392 ;;Total ram usage:       16 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    1
  1395 ;; This function calls:
  1396 ;;		___ftpack
  1397 ;; This function is called by:
  1398 ;;		_pwmGenerator
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function ___ftmul
  1404  04A3                     ___ftmul:	
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1408  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1409  04A4  0820               	movf	___ftmul@f1,w
  1410  04A5  00A6               	movwf	??___ftmul
  1411  04A6  0821               	movf	___ftmul@f1+1,w
  1412  04A7  00A7               	movwf	??___ftmul+1
  1413  04A8  0822               	movf	___ftmul@f1+2,w
  1414  04A9  00A8               	movwf	??___ftmul+2
  1415  04AA  1003               	clrc
  1416  04AB  0D27               	rlf	??___ftmul+1,w
  1417  04AC  0D28               	rlf	??___ftmul+2,w
  1418  04AD  00A9               	movwf	??___ftmul+3
  1419  04AE  0829               	movf	??___ftmul+3,w
  1420  04AF  00AA               	movwf	___ftmul@exp
  1421  04B0  082A               	movf	___ftmul@exp,w
  1422  04B1  1D03               	btfss	3,2
  1423  04B2  2CBA               	goto	l1111
  1424  04B3  3000               	movlw	0
  1425  04B4  00A0               	movwf	?___ftmul
  1426  04B5  3000               	movlw	0
  1427  04B6  00A1               	movwf	?___ftmul+1
  1428  04B7  3000               	movlw	0
  1429  04B8  00A2               	movwf	?___ftmul+2
  1430  04B9  0008               	return
  1431  04BA                     l1111:	
  1432  04BA  0823               	movf	___ftmul@f2,w
  1433  04BB  00A6               	movwf	??___ftmul
  1434  04BC  0824               	movf	___ftmul@f2+1,w
  1435  04BD  00A7               	movwf	??___ftmul+1
  1436  04BE  0825               	movf	___ftmul@f2+2,w
  1437  04BF  00A8               	movwf	??___ftmul+2
  1438  04C0  1003               	clrc
  1439  04C1  0D27               	rlf	??___ftmul+1,w
  1440  04C2  0D28               	rlf	??___ftmul+2,w
  1441  04C3  00A9               	movwf	??___ftmul+3
  1442  04C4  0829               	movf	??___ftmul+3,w
  1443  04C5  00AF               	movwf	___ftmul@sign
  1444  04C6  082F               	movf	___ftmul@sign,w
  1445  04C7  1D03               	btfss	3,2
  1446  04C8  2CD0               	goto	l1117
  1447  04C9  3000               	movlw	0
  1448  04CA  00A0               	movwf	?___ftmul
  1449  04CB  3000               	movlw	0
  1450  04CC  00A1               	movwf	?___ftmul+1
  1451  04CD  3000               	movlw	0
  1452  04CE  00A2               	movwf	?___ftmul+2
  1453  04CF  0008               	return
  1454  04D0                     l1117:	
  1455  04D0  082F               	movf	___ftmul@sign,w
  1456  04D1  3E7B               	addlw	123
  1457  04D2  00A6               	movwf	??___ftmul
  1458  04D3  0826               	movf	??___ftmul,w
  1459  04D4  07AA               	addwf	___ftmul@exp,f
  1460  04D5  0820               	movf	___ftmul@f1,w
  1461  04D6  00A6               	movwf	??___ftmul
  1462  04D7  0821               	movf	___ftmul@f1+1,w
  1463  04D8  00A7               	movwf	??___ftmul+1
  1464  04D9  0822               	movf	___ftmul@f1+2,w
  1465  04DA  00A8               	movwf	??___ftmul+2
  1466  04DB  3010               	movlw	16
  1467  04DC                     u1345:	
  1468  04DC  1003               	clrc
  1469  04DD  0CA8               	rrf	??___ftmul+2,f
  1470  04DE  0CA7               	rrf	??___ftmul+1,f
  1471  04DF  0CA6               	rrf	??___ftmul,f
  1472  04E0  3EFF               	addlw	-1
  1473  04E1  1D03               	skipz
  1474  04E2  2CDC               	goto	u1345
  1475  04E3  0826               	movf	??___ftmul,w
  1476  04E4  00A9               	movwf	??___ftmul+3
  1477  04E5  0829               	movf	??___ftmul+3,w
  1478  04E6  00AF               	movwf	___ftmul@sign
  1479  04E7  0823               	movf	___ftmul@f2,w
  1480  04E8  00A6               	movwf	??___ftmul
  1481  04E9  0824               	movf	___ftmul@f2+1,w
  1482  04EA  00A7               	movwf	??___ftmul+1
  1483  04EB  0825               	movf	___ftmul@f2+2,w
  1484  04EC  00A8               	movwf	??___ftmul+2
  1485  04ED  3010               	movlw	16
  1486  04EE                     u1355:	
  1487  04EE  1003               	clrc
  1488  04EF  0CA8               	rrf	??___ftmul+2,f
  1489  04F0  0CA7               	rrf	??___ftmul+1,f
  1490  04F1  0CA6               	rrf	??___ftmul,f
  1491  04F2  3EFF               	addlw	-1
  1492  04F3  1D03               	skipz
  1493  04F4  2CEE               	goto	u1355
  1494  04F5  0826               	movf	??___ftmul,w
  1495  04F6  00A9               	movwf	??___ftmul+3
  1496  04F7  0829               	movf	??___ftmul+3,w
  1497  04F8  06AF               	xorwf	___ftmul@sign,f
  1498  04F9  3080               	movlw	128
  1499  04FA  00A6               	movwf	??___ftmul
  1500  04FB  0826               	movf	??___ftmul,w
  1501  04FC  05AF               	andwf	___ftmul@sign,f
  1502  04FD  17A1               	bsf	___ftmul@f1+1,7
  1503  04FE  17A4               	bsf	___ftmul@f2+1,7
  1504  04FF  30FF               	movlw	255
  1505  0500  05A3               	andwf	___ftmul@f2,f
  1506  0501  30FF               	movlw	255
  1507  0502  05A4               	andwf	___ftmul@f2+1,f
  1508  0503  3000               	movlw	0
  1509  0504  05A5               	andwf	___ftmul@f2+2,f
  1510  0505  3000               	movlw	0
  1511  0506  00AB               	movwf	___ftmul@f3_as_product
  1512  0507  3000               	movlw	0
  1513  0508  00AC               	movwf	___ftmul@f3_as_product+1
  1514  0509  3000               	movlw	0
  1515  050A  00AD               	movwf	___ftmul@f3_as_product+2
  1516  050B  3007               	movlw	7
  1517  050C  00A6               	movwf	??___ftmul
  1518  050D  0826               	movf	??___ftmul,w
  1519  050E  00AE               	movwf	___ftmul@cntr
  1520  050F                     l1129:	
  1521  050F  1C20               	btfss	___ftmul@f1,0
  1522  0510  2D1F               	goto	l1133
  1523  0511  0823               	movf	___ftmul@f2,w
  1524  0512  07AB               	addwf	___ftmul@f3_as_product,f
  1525  0513  0824               	movf	___ftmul@f2+1,w
  1526  0514  1103               	clrz
  1527  0515  1803               	skipnc
  1528  0516  0A24               	incf	___ftmul@f2+1,w
  1529  0517  1D03               	btfss	3,2
  1530  0518  07AC               	addwf	___ftmul@f3_as_product+1,f
  1531  0519  0825               	movf	___ftmul@f2+2,w
  1532  051A  1103               	clrz
  1533  051B  1803               	skipnc
  1534  051C  0A25               	incf	___ftmul@f2+2,w
  1535  051D  1D03               	btfss	3,2
  1536  051E  07AD               	addwf	___ftmul@f3_as_product+2,f
  1537  051F                     l1133:	
  1538  051F  3001               	movlw	1
  1539  0520                     u1385:	
  1540  0520  1003               	clrc
  1541  0521  0CA2               	rrf	___ftmul@f1+2,f
  1542  0522  0CA1               	rrf	___ftmul@f1+1,f
  1543  0523  0CA0               	rrf	___ftmul@f1,f
  1544  0524  3EFF               	addlw	-1
  1545  0525  1D03               	skipz
  1546  0526  2D20               	goto	u1385
  1547  0527  3001               	movlw	1
  1548  0528                     u1395:	
  1549  0528  1003               	clrc
  1550  0529  0DA3               	rlf	___ftmul@f2,f
  1551  052A  0DA4               	rlf	___ftmul@f2+1,f
  1552  052B  0DA5               	rlf	___ftmul@f2+2,f
  1553  052C  3EFF               	addlw	-1
  1554  052D  1D03               	skipz
  1555  052E  2D28               	goto	u1395
  1556  052F  3001               	movlw	1
  1557  0530  02AE               	subwf	___ftmul@cntr,f
  1558  0531  1D03               	btfss	3,2
  1559  0532  2D0F               	goto	l1129
  1560  0533  3009               	movlw	9
  1561  0534  00A6               	movwf	??___ftmul
  1562  0535  0826               	movf	??___ftmul,w
  1563  0536  00AE               	movwf	___ftmul@cntr
  1564  0537                     l1141:	
  1565  0537  1C20               	btfss	___ftmul@f1,0
  1566  0538  2D47               	goto	l1145
  1567  0539  0823               	movf	___ftmul@f2,w
  1568  053A  07AB               	addwf	___ftmul@f3_as_product,f
  1569  053B  0824               	movf	___ftmul@f2+1,w
  1570  053C  1103               	clrz
  1571  053D  1803               	skipnc
  1572  053E  0A24               	incf	___ftmul@f2+1,w
  1573  053F  1D03               	btfss	3,2
  1574  0540  07AC               	addwf	___ftmul@f3_as_product+1,f
  1575  0541  0825               	movf	___ftmul@f2+2,w
  1576  0542  1103               	clrz
  1577  0543  1803               	skipnc
  1578  0544  0A25               	incf	___ftmul@f2+2,w
  1579  0545  1D03               	btfss	3,2
  1580  0546  07AD               	addwf	___ftmul@f3_as_product+2,f
  1581  0547                     l1145:	
  1582  0547  3001               	movlw	1
  1583  0548                     u1435:	
  1584  0548  1003               	clrc
  1585  0549  0CA2               	rrf	___ftmul@f1+2,f
  1586  054A  0CA1               	rrf	___ftmul@f1+1,f
  1587  054B  0CA0               	rrf	___ftmul@f1,f
  1588  054C  3EFF               	addlw	-1
  1589  054D  1D03               	skipz
  1590  054E  2D48               	goto	u1435
  1591  054F  3001               	movlw	1
  1592  0550                     u1445:	
  1593  0550  1003               	clrc
  1594  0551  0CAD               	rrf	___ftmul@f3_as_product+2,f
  1595  0552  0CAC               	rrf	___ftmul@f3_as_product+1,f
  1596  0553  0CAB               	rrf	___ftmul@f3_as_product,f
  1597  0554  3EFF               	addlw	-1
  1598  0555  1D03               	skipz
  1599  0556  2D50               	goto	u1445
  1600  0557  3001               	movlw	1
  1601  0558  02AE               	subwf	___ftmul@cntr,f
  1602  0559  1D03               	btfss	3,2
  1603  055A  2D37               	goto	l1141
  1604  055B  082B               	movf	___ftmul@f3_as_product,w
  1605  055C  00F0               	movwf	___ftpack@arg
  1606  055D  082C               	movf	___ftmul@f3_as_product+1,w
  1607  055E  00F1               	movwf	___ftpack@arg+1
  1608  055F  082D               	movf	___ftmul@f3_as_product+2,w
  1609  0560  00F2               	movwf	___ftpack@arg+2
  1610  0561  082A               	movf	___ftmul@exp,w
  1611  0562  00A6               	movwf	??___ftmul
  1612  0563  0826               	movf	??___ftmul,w
  1613  0564  00F3               	movwf	___ftpack@exp
  1614  0565  082F               	movf	___ftmul@sign,w
  1615  0566  00A7               	movwf	??___ftmul+1
  1616  0567  0827               	movf	??___ftmul+1,w
  1617  0568  00F4               	movwf	___ftpack@sign
  1618  0569  227A               	fcall	___ftpack
  1619  056A  0870               	movf	?___ftpack,w
  1620  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1621  056C  00A0               	movwf	?___ftmul
  1622  056D  0871               	movf	?___ftpack+1,w
  1623  056E  00A1               	movwf	?___ftmul+1
  1624  056F  0872               	movf	?___ftpack+2,w
  1625  0570  00A2               	movwf	?___ftmul+2
  1626  0571  0008               	return
  1627  0572                     __end_of___ftmul:	
  1628                           
  1629                           	psect	text4
  1630  03EF                     __ptext4:	
  1631 ;; *************** function ___ftdiv *****************
  1632 ;; Defined at:
  1633 ;;		line 56 in file "/Applications/microchip/xc8/v1.41/sources/common/ftdiv.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  f2              3   16[BANK0 ] float 
  1636 ;;  f1              3   19[BANK0 ] float 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  f3              3   27[BANK0 ] float 
  1639 ;;  sign            1   31[BANK0 ] unsigned char 
  1640 ;;  exp             1   30[BANK0 ] unsigned char 
  1641 ;;  cntr            1   26[BANK0 ] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  3   16[BANK0 ] float 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0, pclath, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1
  1651 ;;      Params:         0       6       0
  1652 ;;      Locals:         0       6       0
  1653 ;;      Temps:          0       4       0
  1654 ;;      Totals:         0      16       0
  1655 ;;Total ram usage:       16 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    1
  1658 ;; This function calls:
  1659 ;;		___ftpack
  1660 ;; This function is called by:
  1661 ;;		_main
  1662 ;;		_pwmGenerator
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           
  1667                           ;psect for function ___ftdiv
  1668  03EF                     ___ftdiv:	
  1669                           
  1670                           ;incstack = 0
  1671                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1672  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1673  03F0  0833               	movf	___ftdiv@f1,w
  1674  03F1  00B6               	movwf	??___ftdiv
  1675  03F2  0834               	movf	___ftdiv@f1+1,w
  1676  03F3  00B7               	movwf	??___ftdiv+1
  1677  03F4  0835               	movf	___ftdiv@f1+2,w
  1678  03F5  00B8               	movwf	??___ftdiv+2
  1679  03F6  1003               	clrc
  1680  03F7  0D37               	rlf	??___ftdiv+1,w
  1681  03F8  0D38               	rlf	??___ftdiv+2,w
  1682  03F9  00B9               	movwf	??___ftdiv+3
  1683  03FA  0839               	movf	??___ftdiv+3,w
  1684  03FB  00BE               	movwf	___ftdiv@exp
  1685  03FC  083E               	movf	___ftdiv@exp,w
  1686  03FD  1D03               	btfss	3,2
  1687  03FE  2C06               	goto	l1069
  1688  03FF  3000               	movlw	0
  1689  0400  00B0               	movwf	?___ftdiv
  1690  0401  3000               	movlw	0
  1691  0402  00B1               	movwf	?___ftdiv+1
  1692  0403  3000               	movlw	0
  1693  0404  00B2               	movwf	?___ftdiv+2
  1694  0405  0008               	return
  1695  0406                     l1069:	
  1696  0406  0830               	movf	___ftdiv@f2,w
  1697  0407  00B6               	movwf	??___ftdiv
  1698  0408  0831               	movf	___ftdiv@f2+1,w
  1699  0409  00B7               	movwf	??___ftdiv+1
  1700  040A  0832               	movf	___ftdiv@f2+2,w
  1701  040B  00B8               	movwf	??___ftdiv+2
  1702  040C  1003               	clrc
  1703  040D  0D37               	rlf	??___ftdiv+1,w
  1704  040E  0D38               	rlf	??___ftdiv+2,w
  1705  040F  00B9               	movwf	??___ftdiv+3
  1706  0410  0839               	movf	??___ftdiv+3,w
  1707  0411  00BF               	movwf	___ftdiv@sign
  1708  0412  083F               	movf	___ftdiv@sign,w
  1709  0413  1D03               	btfss	3,2
  1710  0414  2C1C               	goto	l1075
  1711  0415  3000               	movlw	0
  1712  0416  00B0               	movwf	?___ftdiv
  1713  0417  3000               	movlw	0
  1714  0418  00B1               	movwf	?___ftdiv+1
  1715  0419  3000               	movlw	0
  1716  041A  00B2               	movwf	?___ftdiv+2
  1717  041B  0008               	return
  1718  041C                     l1075:	
  1719  041C  3000               	movlw	0
  1720  041D  00BB               	movwf	___ftdiv@f3
  1721  041E  3000               	movlw	0
  1722  041F  00BC               	movwf	___ftdiv@f3+1
  1723  0420  3000               	movlw	0
  1724  0421  00BD               	movwf	___ftdiv@f3+2
  1725  0422  3089               	movlw	137
  1726  0423  073F               	addwf	___ftdiv@sign,w
  1727  0424  00B6               	movwf	??___ftdiv
  1728  0425  0836               	movf	??___ftdiv,w
  1729  0426  02BE               	subwf	___ftdiv@exp,f
  1730  0427  0833               	movf	___ftdiv@f1,w
  1731  0428  00B6               	movwf	??___ftdiv
  1732  0429  0834               	movf	___ftdiv@f1+1,w
  1733  042A  00B7               	movwf	??___ftdiv+1
  1734  042B  0835               	movf	___ftdiv@f1+2,w
  1735  042C  00B8               	movwf	??___ftdiv+2
  1736  042D  3010               	movlw	16
  1737  042E                     u1265:	
  1738  042E  1003               	clrc
  1739  042F  0CB8               	rrf	??___ftdiv+2,f
  1740  0430  0CB7               	rrf	??___ftdiv+1,f
  1741  0431  0CB6               	rrf	??___ftdiv,f
  1742  0432  3EFF               	addlw	-1
  1743  0433  1D03               	skipz
  1744  0434  2C2E               	goto	u1265
  1745  0435  0836               	movf	??___ftdiv,w
  1746  0436  00B9               	movwf	??___ftdiv+3
  1747  0437  0839               	movf	??___ftdiv+3,w
  1748  0438  00BF               	movwf	___ftdiv@sign
  1749  0439  0830               	movf	___ftdiv@f2,w
  1750  043A  00B6               	movwf	??___ftdiv
  1751  043B  0831               	movf	___ftdiv@f2+1,w
  1752  043C  00B7               	movwf	??___ftdiv+1
  1753  043D  0832               	movf	___ftdiv@f2+2,w
  1754  043E  00B8               	movwf	??___ftdiv+2
  1755  043F  3010               	movlw	16
  1756  0440                     u1275:	
  1757  0440  1003               	clrc
  1758  0441  0CB8               	rrf	??___ftdiv+2,f
  1759  0442  0CB7               	rrf	??___ftdiv+1,f
  1760  0443  0CB6               	rrf	??___ftdiv,f
  1761  0444  3EFF               	addlw	-1
  1762  0445  1D03               	skipz
  1763  0446  2C40               	goto	u1275
  1764  0447  0836               	movf	??___ftdiv,w
  1765  0448  00B9               	movwf	??___ftdiv+3
  1766  0449  0839               	movf	??___ftdiv+3,w
  1767  044A  06BF               	xorwf	___ftdiv@sign,f
  1768  044B  3080               	movlw	128
  1769  044C  00B6               	movwf	??___ftdiv
  1770  044D  0836               	movf	??___ftdiv,w
  1771  044E  05BF               	andwf	___ftdiv@sign,f
  1772  044F  17B4               	bsf	___ftdiv@f1+1,7
  1773  0450  30FF               	movlw	255
  1774  0451  05B3               	andwf	___ftdiv@f1,f
  1775  0452  30FF               	movlw	255
  1776  0453  05B4               	andwf	___ftdiv@f1+1,f
  1777  0454  3000               	movlw	0
  1778  0455  05B5               	andwf	___ftdiv@f1+2,f
  1779  0456  17B1               	bsf	___ftdiv@f2+1,7
  1780  0457  30FF               	movlw	255
  1781  0458  05B0               	andwf	___ftdiv@f2,f
  1782  0459  30FF               	movlw	255
  1783  045A  05B1               	andwf	___ftdiv@f2+1,f
  1784  045B  3000               	movlw	0
  1785  045C  05B2               	andwf	___ftdiv@f2+2,f
  1786  045D  3018               	movlw	24
  1787  045E  00B6               	movwf	??___ftdiv
  1788  045F  0836               	movf	??___ftdiv,w
  1789  0460  00BA               	movwf	___ftdiv@cntr
  1790  0461                     l1089:	
  1791  0461  3001               	movlw	1
  1792  0462                     u1285:	
  1793  0462  1003               	clrc
  1794  0463  0DBB               	rlf	___ftdiv@f3,f
  1795  0464  0DBC               	rlf	___ftdiv@f3+1,f
  1796  0465  0DBD               	rlf	___ftdiv@f3+2,f
  1797  0466  3EFF               	addlw	-1
  1798  0467  1D03               	skipz
  1799  0468  2C62               	goto	u1285
  1800  0469  0832               	movf	___ftdiv@f2+2,w
  1801  046A  0235               	subwf	___ftdiv@f1+2,w
  1802  046B  1D03               	skipz
  1803  046C  2C73               	goto	u1295
  1804  046D  0831               	movf	___ftdiv@f2+1,w
  1805  046E  0234               	subwf	___ftdiv@f1+1,w
  1806  046F  1D03               	skipz
  1807  0470  2C73               	goto	u1295
  1808  0471  0830               	movf	___ftdiv@f2,w
  1809  0472  0233               	subwf	___ftdiv@f1,w
  1810  0473                     u1295:	
  1811  0473  1C03               	skipc
  1812  0474  2C80               	goto	l1097
  1813  0475  0830               	movf	___ftdiv@f2,w
  1814  0476  02B3               	subwf	___ftdiv@f1,f
  1815  0477  0831               	movf	___ftdiv@f2+1,w
  1816  0478  1C03               	skipc
  1817  0479  0F31               	incfsz	___ftdiv@f2+1,w
  1818  047A  02B4               	subwf	___ftdiv@f1+1,f
  1819  047B  0832               	movf	___ftdiv@f2+2,w
  1820  047C  1C03               	skipc
  1821  047D  0A32               	incf	___ftdiv@f2+2,w
  1822  047E  02B5               	subwf	___ftdiv@f1+2,f
  1823  047F  143B               	bsf	___ftdiv@f3,0
  1824  0480                     l1097:	
  1825  0480  3001               	movlw	1
  1826  0481                     u1305:	
  1827  0481  1003               	clrc
  1828  0482  0DB3               	rlf	___ftdiv@f1,f
  1829  0483  0DB4               	rlf	___ftdiv@f1+1,f
  1830  0484  0DB5               	rlf	___ftdiv@f1+2,f
  1831  0485  3EFF               	addlw	-1
  1832  0486  1D03               	skipz
  1833  0487  2C81               	goto	u1305
  1834  0488  3001               	movlw	1
  1835  0489  02BA               	subwf	___ftdiv@cntr,f
  1836  048A  1D03               	btfss	3,2
  1837  048B  2C61               	goto	l1089
  1838  048C  083B               	movf	___ftdiv@f3,w
  1839  048D  00F0               	movwf	___ftpack@arg
  1840  048E  083C               	movf	___ftdiv@f3+1,w
  1841  048F  00F1               	movwf	___ftpack@arg+1
  1842  0490  083D               	movf	___ftdiv@f3+2,w
  1843  0491  00F2               	movwf	___ftpack@arg+2
  1844  0492  083E               	movf	___ftdiv@exp,w
  1845  0493  00B6               	movwf	??___ftdiv
  1846  0494  0836               	movf	??___ftdiv,w
  1847  0495  00F3               	movwf	___ftpack@exp
  1848  0496  083F               	movf	___ftdiv@sign,w
  1849  0497  00B7               	movwf	??___ftdiv+1
  1850  0498  0837               	movf	??___ftdiv+1,w
  1851  0499  00F4               	movwf	___ftpack@sign
  1852  049A  227A               	fcall	___ftpack
  1853  049B  0870               	movf	?___ftpack,w
  1854  049C  1283               	bcf	3,5	;RP0=0, select bank0
  1855  049D  00B0               	movwf	?___ftdiv
  1856  049E  0871               	movf	?___ftpack+1,w
  1857  049F  00B1               	movwf	?___ftdiv+1
  1858  04A0  0872               	movf	?___ftpack+2,w
  1859  04A1  00B2               	movwf	?___ftdiv+2
  1860  04A2  0008               	return
  1861  04A3                     __end_of___ftdiv:	
  1862                           
  1863                           	psect	text5
  1864  0572                     __ptext5:	
  1865 ;; *************** function ___ftadd *****************
  1866 ;; Defined at:
  1867 ;;		line 86 in file "/Applications/microchip/xc8/v1.41/sources/common/ftadd.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  f1              3   32[BANK0 ] float 
  1870 ;;  f2              3   35[BANK0 ] float 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  exp1            1   44[BANK0 ] unsigned char 
  1873 ;;  exp2            1   43[BANK0 ] unsigned char 
  1874 ;;  sign            1   42[BANK0 ] unsigned char 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  3   32[BANK0 ] float 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2, status,0, pclath, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMMON   BANK0   BANK1
  1884 ;;      Params:         0       6       0
  1885 ;;      Locals:         0       3       0
  1886 ;;      Temps:          0       4       0
  1887 ;;      Totals:         0      13       0
  1888 ;;Total ram usage:       13 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    1
  1891 ;; This function calls:
  1892 ;;		___ftpack
  1893 ;; This function is called by:
  1894 ;;		_pwmGenerator
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           
  1899                           ;psect for function ___ftadd
  1900  0572                     ___ftadd:	
  1901                           
  1902                           ;incstack = 0
  1903                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  1904  0572  1283               	bcf	3,5	;RP0=0, select bank0
  1905  0573  0840               	movf	___ftadd@f1,w
  1906  0574  00C6               	movwf	??___ftadd
  1907  0575  0841               	movf	___ftadd@f1+1,w
  1908  0576  00C7               	movwf	??___ftadd+1
  1909  0577  0842               	movf	___ftadd@f1+2,w
  1910  0578  00C8               	movwf	??___ftadd+2
  1911  0579  1003               	clrc
  1912  057A  0D47               	rlf	??___ftadd+1,w
  1913  057B  0D48               	rlf	??___ftadd+2,w
  1914  057C  00C9               	movwf	??___ftadd+3
  1915  057D  0849               	movf	??___ftadd+3,w
  1916  057E  00CC               	movwf	___ftadd@exp1
  1917  057F  0843               	movf	___ftadd@f2,w
  1918  0580  00C6               	movwf	??___ftadd
  1919  0581  0844               	movf	___ftadd@f2+1,w
  1920  0582  00C7               	movwf	??___ftadd+1
  1921  0583  0845               	movf	___ftadd@f2+2,w
  1922  0584  00C8               	movwf	??___ftadd+2
  1923  0585  1003               	clrc
  1924  0586  0D47               	rlf	??___ftadd+1,w
  1925  0587  0D48               	rlf	??___ftadd+2,w
  1926  0588  00C9               	movwf	??___ftadd+3
  1927  0589  0849               	movf	??___ftadd+3,w
  1928  058A  00CB               	movwf	___ftadd@exp2
  1929  058B  084C               	movf	___ftadd@exp1,w
  1930  058C  1903               	btfsc	3,2
  1931  058D  2D9A               	goto	l999
  1932  058E  084B               	movf	___ftadd@exp2,w
  1933  058F  024C               	subwf	___ftadd@exp1,w
  1934  0590  1803               	skipnc
  1935  0591  2DA1               	goto	l1003
  1936  0592  034C               	decf	___ftadd@exp1,w
  1937  0593  3AFF               	xorlw	255
  1938  0594  074B               	addwf	___ftadd@exp2,w
  1939  0595  00C6               	movwf	??___ftadd
  1940  0596  3019               	movlw	25
  1941  0597  0246               	subwf	??___ftadd,w
  1942  0598  1C03               	skipc
  1943  0599  2DA1               	goto	l1003
  1944  059A                     l999:	
  1945  059A  0843               	movf	___ftadd@f2,w
  1946  059B  00C0               	movwf	?___ftadd
  1947  059C  0844               	movf	___ftadd@f2+1,w
  1948  059D  00C1               	movwf	?___ftadd+1
  1949  059E  0845               	movf	___ftadd@f2+2,w
  1950  059F  00C2               	movwf	?___ftadd+2
  1951  05A0  0008               	return
  1952  05A1                     l1003:	
  1953  05A1  084B               	movf	___ftadd@exp2,w
  1954  05A2  1903               	btfsc	3,2
  1955  05A3  0008               	return
  1956  05A4  084C               	movf	___ftadd@exp1,w
  1957  05A5  024B               	subwf	___ftadd@exp2,w
  1958  05A6  1803               	skipnc
  1959  05A7  2DB0               	goto	l1009
  1960  05A8  034B               	decf	___ftadd@exp2,w
  1961  05A9  3AFF               	xorlw	255
  1962  05AA  074C               	addwf	___ftadd@exp1,w
  1963  05AB  00C6               	movwf	??___ftadd
  1964  05AC  3019               	movlw	25
  1965  05AD  0246               	subwf	??___ftadd,w
  1966  05AE  1803               	btfsc	3,0
  1967  05AF  0008               	return
  1968  05B0                     l1009:	
  1969  05B0  3006               	movlw	6
  1970  05B1  00C6               	movwf	??___ftadd
  1971  05B2  0846               	movf	??___ftadd,w
  1972  05B3  00CA               	movwf	___ftadd@sign
  1973  05B4  1BC2               	btfsc	___ftadd@f1+2,7
  1974  05B5  17CA               	bsf	___ftadd@sign,7
  1975  05B6  1BC5               	btfsc	___ftadd@f2+2,7
  1976  05B7  174A               	bsf	___ftadd@sign,6
  1977  05B8  17C1               	bsf	___ftadd@f1+1,7
  1978  05B9  30FF               	movlw	255
  1979  05BA  05C0               	andwf	___ftadd@f1,f
  1980  05BB  30FF               	movlw	255
  1981  05BC  05C1               	andwf	___ftadd@f1+1,f
  1982  05BD  3000               	movlw	0
  1983  05BE  05C2               	andwf	___ftadd@f1+2,f
  1984  05BF  17C4               	bsf	___ftadd@f2+1,7
  1985  05C0  30FF               	movlw	255
  1986  05C1  05C3               	andwf	___ftadd@f2,f
  1987  05C2  30FF               	movlw	255
  1988  05C3  05C4               	andwf	___ftadd@f2+1,f
  1989  05C4  3000               	movlw	0
  1990  05C5  05C5               	andwf	___ftadd@f2+2,f
  1991  05C6  084B               	movf	___ftadd@exp2,w
  1992  05C7  024C               	subwf	___ftadd@exp1,w
  1993  05C8  1803               	skipnc
  1994  05C9  2DF0               	goto	l1031
  1995  05CA                     l1021:	
  1996  05CA  3001               	movlw	1
  1997  05CB                     u1095:	
  1998  05CB  1003               	clrc
  1999  05CC  0DC3               	rlf	___ftadd@f2,f
  2000  05CD  0DC4               	rlf	___ftadd@f2+1,f
  2001  05CE  0DC5               	rlf	___ftadd@f2+2,f
  2002  05CF  3EFF               	addlw	-1
  2003  05D0  1D03               	skipz
  2004  05D1  2DCB               	goto	u1095
  2005  05D2  3001               	movlw	1
  2006  05D3  02CB               	subwf	___ftadd@exp2,f
  2007  05D4  084B               	movf	___ftadd@exp2,w
  2008  05D5  064C               	xorwf	___ftadd@exp1,w
  2009  05D6  1903               	skipnz
  2010  05D7  2DEB               	goto	l1029
  2011  05D8  3001               	movlw	1
  2012  05D9  02CA               	subwf	___ftadd@sign,f
  2013  05DA  084A               	movf	___ftadd@sign,w
  2014  05DB  3907               	andlw	7
  2015  05DC  1903               	btfsc	3,2
  2016  05DD  2DEB               	goto	l1029
  2017  05DE  2DCA               	goto	l1021
  2018  05DF                     l1027:	
  2019  05DF  3001               	movlw	1
  2020  05E0                     u1125:	
  2021  05E0  1003               	clrc
  2022  05E1  0CC2               	rrf	___ftadd@f1+2,f
  2023  05E2  0CC1               	rrf	___ftadd@f1+1,f
  2024  05E3  0CC0               	rrf	___ftadd@f1,f
  2025  05E4  3EFF               	addlw	-1
  2026  05E5  1D03               	skipz
  2027  05E6  2DE0               	goto	u1125
  2028  05E7  3001               	movlw	1
  2029  05E8  00C6               	movwf	??___ftadd
  2030  05E9  0846               	movf	??___ftadd,w
  2031  05EA  07CC               	addwf	___ftadd@exp1,f
  2032  05EB                     l1029:	
  2033  05EB  084C               	movf	___ftadd@exp1,w
  2034  05EC  064B               	xorwf	___ftadd@exp2,w
  2035  05ED  1903               	btfsc	3,2
  2036  05EE  2E19               	goto	l347
  2037  05EF  2DDF               	goto	l1027
  2038  05F0                     l1031:	
  2039  05F0  084C               	movf	___ftadd@exp1,w
  2040  05F1  024B               	subwf	___ftadd@exp2,w
  2041  05F2  1803               	skipnc
  2042  05F3  2E19               	goto	l347
  2043  05F4                     l1033:	
  2044  05F4  3001               	movlw	1
  2045  05F5                     u1155:	
  2046  05F5  1003               	clrc
  2047  05F6  0DC0               	rlf	___ftadd@f1,f
  2048  05F7  0DC1               	rlf	___ftadd@f1+1,f
  2049  05F8  0DC2               	rlf	___ftadd@f1+2,f
  2050  05F9  3EFF               	addlw	-1
  2051  05FA  1D03               	skipz
  2052  05FB  2DF5               	goto	u1155
  2053  05FC  3001               	movlw	1
  2054  05FD  02CC               	subwf	___ftadd@exp1,f
  2055  05FE  084B               	movf	___ftadd@exp2,w
  2056  05FF  064C               	xorwf	___ftadd@exp1,w
  2057  0600  1903               	skipnz
  2058  0601  2E15               	goto	l1041
  2059  0602  3001               	movlw	1
  2060  0603  02CA               	subwf	___ftadd@sign,f
  2061  0604  084A               	movf	___ftadd@sign,w
  2062  0605  3907               	andlw	7
  2063  0606  1903               	btfsc	3,2
  2064  0607  2E15               	goto	l1041
  2065  0608  2DF4               	goto	l1033
  2066  0609                     l1039:	
  2067  0609  3001               	movlw	1
  2068  060A                     u1185:	
  2069  060A  1003               	clrc
  2070  060B  0CC5               	rrf	___ftadd@f2+2,f
  2071  060C  0CC4               	rrf	___ftadd@f2+1,f
  2072  060D  0CC3               	rrf	___ftadd@f2,f
  2073  060E  3EFF               	addlw	-1
  2074  060F  1D03               	skipz
  2075  0610  2E0A               	goto	u1185
  2076  0611  3001               	movlw	1
  2077  0612  00C6               	movwf	??___ftadd
  2078  0613  0846               	movf	??___ftadd,w
  2079  0614  07CB               	addwf	___ftadd@exp2,f
  2080  0615                     l1041:	
  2081  0615  084C               	movf	___ftadd@exp1,w
  2082  0616  064B               	xorwf	___ftadd@exp2,w
  2083  0617  1D03               	skipz
  2084  0618  2E09               	goto	l1039
  2085  0619                     l347:	
  2086  0619  1FCA               	btfss	___ftadd@sign,7
  2087  061A  2E2B               	goto	l1045
  2088  061B  30FF               	movlw	255
  2089  061C  06C0               	xorwf	___ftadd@f1,f
  2090  061D  30FF               	movlw	255
  2091  061E  06C1               	xorwf	___ftadd@f1+1,f
  2092  061F  30FF               	movlw	255
  2093  0620  06C2               	xorwf	___ftadd@f1+2,f
  2094  0621  3001               	movlw	1
  2095  0622  07C0               	addwf	___ftadd@f1,f
  2096  0623  3000               	movlw	0
  2097  0624  1803               	skipnc
  2098  0625  3001               	movlw	1
  2099  0626  07C1               	addwf	___ftadd@f1+1,f
  2100  0627  3000               	movlw	0
  2101  0628  1803               	skipnc
  2102  0629  3001               	movlw	1
  2103  062A  07C2               	addwf	___ftadd@f1+2,f
  2104  062B                     l1045:	
  2105  062B  1F4A               	btfss	___ftadd@sign,6
  2106  062C  2E3D               	goto	l1049
  2107  062D  30FF               	movlw	255
  2108  062E  06C3               	xorwf	___ftadd@f2,f
  2109  062F  30FF               	movlw	255
  2110  0630  06C4               	xorwf	___ftadd@f2+1,f
  2111  0631  30FF               	movlw	255
  2112  0632  06C5               	xorwf	___ftadd@f2+2,f
  2113  0633  3001               	movlw	1
  2114  0634  07C3               	addwf	___ftadd@f2,f
  2115  0635  3000               	movlw	0
  2116  0636  1803               	skipnc
  2117  0637  3001               	movlw	1
  2118  0638  07C4               	addwf	___ftadd@f2+1,f
  2119  0639  3000               	movlw	0
  2120  063A  1803               	skipnc
  2121  063B  3001               	movlw	1
  2122  063C  07C5               	addwf	___ftadd@f2+2,f
  2123  063D                     l1049:	
  2124  063D  01CA               	clrf	___ftadd@sign
  2125  063E  0840               	movf	___ftadd@f1,w
  2126  063F  07C3               	addwf	___ftadd@f2,f
  2127  0640  0841               	movf	___ftadd@f1+1,w
  2128  0641  1103               	clrz
  2129  0642  1803               	skipnc
  2130  0643  0A41               	incf	___ftadd@f1+1,w
  2131  0644  1D03               	btfss	3,2
  2132  0645  07C4               	addwf	___ftadd@f2+1,f
  2133  0646  0842               	movf	___ftadd@f1+2,w
  2134  0647  1103               	clrz
  2135  0648  1803               	skipnc
  2136  0649  0A42               	incf	___ftadd@f1+2,w
  2137  064A  1D03               	btfss	3,2
  2138  064B  07C5               	addwf	___ftadd@f2+2,f
  2139  064C  1FC5               	btfss	___ftadd@f2+2,7
  2140  064D  2E60               	goto	l1059
  2141  064E  30FF               	movlw	255
  2142  064F  06C3               	xorwf	___ftadd@f2,f
  2143  0650  30FF               	movlw	255
  2144  0651  06C4               	xorwf	___ftadd@f2+1,f
  2145  0652  30FF               	movlw	255
  2146  0653  06C5               	xorwf	___ftadd@f2+2,f
  2147  0654  3001               	movlw	1
  2148  0655  07C3               	addwf	___ftadd@f2,f
  2149  0656  3000               	movlw	0
  2150  0657  1803               	skipnc
  2151  0658  3001               	movlw	1
  2152  0659  07C4               	addwf	___ftadd@f2+1,f
  2153  065A  3000               	movlw	0
  2154  065B  1803               	skipnc
  2155  065C  3001               	movlw	1
  2156  065D  07C5               	addwf	___ftadd@f2+2,f
  2157  065E  01CA               	clrf	___ftadd@sign
  2158  065F  0ACA               	incf	___ftadd@sign,f
  2159  0660                     l1059:	
  2160  0660  0843               	movf	___ftadd@f2,w
  2161  0661  00F0               	movwf	___ftpack@arg
  2162  0662  0844               	movf	___ftadd@f2+1,w
  2163  0663  00F1               	movwf	___ftpack@arg+1
  2164  0664  0845               	movf	___ftadd@f2+2,w
  2165  0665  00F2               	movwf	___ftpack@arg+2
  2166  0666  084C               	movf	___ftadd@exp1,w
  2167  0667  00C6               	movwf	??___ftadd
  2168  0668  0846               	movf	??___ftadd,w
  2169  0669  00F3               	movwf	___ftpack@exp
  2170  066A  084A               	movf	___ftadd@sign,w
  2171  066B  00C7               	movwf	??___ftadd+1
  2172  066C  0847               	movf	??___ftadd+1,w
  2173  066D  00F4               	movwf	___ftpack@sign
  2174  066E  227A               	fcall	___ftpack
  2175  066F  0870               	movf	?___ftpack,w
  2176  0670  1283               	bcf	3,5	;RP0=0, select bank0
  2177  0671  00C0               	movwf	?___ftadd
  2178  0672  0871               	movf	?___ftpack+1,w
  2179  0673  00C1               	movwf	?___ftadd+1
  2180  0674  0872               	movf	?___ftpack+2,w
  2181  0675  00C2               	movwf	?___ftadd+2
  2182  0676  0008               	return
  2183  0677                     __end_of___ftadd:	
  2184                           
  2185                           	psect	text6
  2186  023A                     __ptext6:	
  2187 ;; *************** function ___awtoft *****************
  2188 ;; Defined at:
  2189 ;;		line 32 in file "/Applications/microchip/xc8/v1.41/sources/common/awtoft.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  c               2    8[COMMON] int 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  sign            1   13[COMMON] unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  3    8[COMMON] float 
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0, pclath, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1
  2203 ;;      Params:         3       0       0
  2204 ;;      Locals:         1       0       0
  2205 ;;      Temps:          2       0       0
  2206 ;;      Totals:         6       0       0
  2207 ;;Total ram usage:        6 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    1
  2210 ;; This function calls:
  2211 ;;		___ftpack
  2212 ;; This function is called by:
  2213 ;;		_pwmGenerator
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           
  2218                           ;psect for function ___awtoft
  2219  023A                     ___awtoft:	
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2223  023A  01FD               	clrf	___awtoft@sign
  2224  023B  1FF9               	btfss	___awtoft@c+1,7
  2225  023C  2A44               	goto	l989
  2226  023D  09F8               	comf	___awtoft@c,f
  2227  023E  09F9               	comf	___awtoft@c+1,f
  2228  023F  0AF8               	incf	___awtoft@c,f
  2229  0240  1903               	skipnz
  2230  0241  0AF9               	incf	___awtoft@c+1,f
  2231  0242  01FD               	clrf	___awtoft@sign
  2232  0243  0AFD               	incf	___awtoft@sign,f
  2233  0244                     l989:	
  2234  0244  0878               	movf	___awtoft@c,w
  2235  0245  00F0               	movwf	___ftpack@arg
  2236  0246  0879               	movf	___awtoft@c+1,w
  2237  0247  00F1               	movwf	___ftpack@arg+1
  2238  0248  01F2               	clrf	___ftpack@arg+2
  2239  0249  308E               	movlw	142
  2240  024A  00FB               	movwf	??___awtoft
  2241  024B  087B               	movf	??___awtoft,w
  2242  024C  00F3               	movwf	___ftpack@exp
  2243  024D  087D               	movf	___awtoft@sign,w
  2244  024E  00FC               	movwf	??___awtoft+1
  2245  024F  087C               	movf	??___awtoft+1,w
  2246  0250  00F4               	movwf	___ftpack@sign
  2247  0251  227A               	fcall	___ftpack
  2248  0252  0870               	movf	?___ftpack,w
  2249  0253  00F8               	movwf	?___awtoft
  2250  0254  0871               	movf	?___ftpack+1,w
  2251  0255  00F9               	movwf	?___awtoft+1
  2252  0256  0872               	movf	?___ftpack+2,w
  2253  0257  00FA               	movwf	?___awtoft+2
  2254  0258  0008               	return
  2255  0259                     __end_of___awtoft:	
  2256                           
  2257                           	psect	text7
  2258  0224                     __ptext7:	
  2259 ;; *************** function _init *****************
  2260 ;; Defined at:
  2261 ;;		line 97 in file "main.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1
  2275 ;;      Params:         0       0       0
  2276 ;;      Locals:         0       0       0
  2277 ;;      Temps:          0       0       0
  2278 ;;      Totals:         0       0       0
  2279 ;;Total ram usage:        0 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_main
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           
  2289                           ;psect for function _init
  2290  0224                     _init:	
  2291                           
  2292                           ;main.c: 99: OSCCON = 0x70;
  2293                           
  2294                           ;incstack = 0
  2295                           ; Regs used in _init: [wreg+status,2]
  2296  0224  3070               	movlw	112
  2297  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2298  0226  008F               	movwf	15	;volatile
  2299                           
  2300                           ;main.c: 100: GPIO = 0x00;
  2301  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0228  0185               	clrf	5	;volatile
  2303                           
  2304                           ;main.c: 101: ANSEL = 0x00;
  2305  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2306  022A  019F               	clrf	31	;volatile
  2307                           
  2308                           ;main.c: 102: TRISIO = 0x00;
  2309  022B  0185               	clrf	5	;volatile
  2310                           
  2311                           ;main.c: 103: ADCON0 = 0x00;
  2312  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2313  022D  019F               	clrf	31	;volatile
  2314                           
  2315                           ;main.c: 104: CMCON0 = 0x7;
  2316  022E  3007               	movlw	7
  2317  022F  0099               	movwf	25	;volatile
  2318                           
  2319                           ;main.c: 105: WPU = 0x00;
  2320  0230  1683               	bsf	3,5	;RP0=1, select bank1
  2321  0231  0195               	clrf	21	;volatile
  2322                           
  2323                           ;main.c: 109: TRISIO |= 0x10;
  2324  0232  1605               	bsf	5,4	;volatile
  2325                           
  2326                           ;main.c: 110: T1CON = 0b11010001;
  2327  0233  30D1               	movlw	209
  2328  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0235  0090               	movwf	16	;volatile
  2330                           
  2331                           ;main.c: 111: T1GSS = 1;
  2332  0236  149A               	bsf	26,1	;volatile
  2333                           
  2334                           ;main.c: 112: TMR1L = 0;
  2335  0237  018E               	clrf	14	;volatile
  2336                           
  2337                           ;main.c: 113: TMR1H = 0;
  2338  0238  018F               	clrf	15	;volatile
  2339  0239  0008               	return
  2340  023A                     __end_of_init:	
  2341                           
  2342                           	psect	text8
  2343  0259                     __ptext8:	
  2344 ;; *************** function ___wmul *****************
  2345 ;; Defined at:
  2346 ;;		line 15 in file "/Applications/microchip/xc8/v1.41/sources/common/Umul16.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  multiplier      2    0[COMMON] unsigned int 
  2349 ;;  multiplicand    2    2[COMMON] unsigned int 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  product         2    4[COMMON] unsigned int 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  2    0[COMMON] unsigned int 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1
  2361 ;;      Params:         4       0       0
  2362 ;;      Locals:         2       0       0
  2363 ;;      Temps:          0       0       0
  2364 ;;      Totals:         6       0       0
  2365 ;;Total ram usage:        6 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_main
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function ___wmul
  2376  0259                     ___wmul:	
  2377                           
  2378                           ;incstack = 0
  2379                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2380  0259  01F4               	clrf	___wmul@product
  2381  025A  01F5               	clrf	___wmul@product+1
  2382  025B                     l1273:	
  2383  025B  1C70               	btfss	___wmul@multiplier,0
  2384  025C  2A63               	goto	l155
  2385  025D  0872               	movf	___wmul@multiplicand,w
  2386  025E  07F4               	addwf	___wmul@product,f
  2387  025F  1803               	skipnc
  2388  0260  0AF5               	incf	___wmul@product+1,f
  2389  0261  0873               	movf	___wmul@multiplicand+1,w
  2390  0262  07F5               	addwf	___wmul@product+1,f
  2391  0263                     l155:	
  2392  0263  3001               	movlw	1
  2393  0264                     u1625:	
  2394  0264  1003               	clrc
  2395  0265  0DF2               	rlf	___wmul@multiplicand,f
  2396  0266  0DF3               	rlf	___wmul@multiplicand+1,f
  2397  0267  3EFF               	addlw	-1
  2398  0268  1D03               	skipz
  2399  0269  2A64               	goto	u1625
  2400  026A  3001               	movlw	1
  2401  026B                     u1635:	
  2402  026B  1003               	clrc
  2403  026C  0CF1               	rrf	___wmul@multiplier+1,f
  2404  026D  0CF0               	rrf	___wmul@multiplier,f
  2405  026E  3EFF               	addlw	-1
  2406  026F  1D03               	skipz
  2407  0270  2A6B               	goto	u1635
  2408  0271  0870               	movf	___wmul@multiplier,w
  2409  0272  0471               	iorwf	___wmul@multiplier+1,w
  2410  0273  1D03               	btfss	3,2
  2411  0274  2A5B               	goto	l1273
  2412  0275  0875               	movf	___wmul@product+1,w
  2413  0276  00F1               	movwf	?___wmul+1
  2414  0277  0874               	movf	___wmul@product,w
  2415  0278  00F0               	movwf	?___wmul
  2416  0279  0008               	return
  2417  027A                     __end_of___wmul:	
  2418                           
  2419                           	psect	text9
  2420  0212                     __ptext9:	
  2421 ;; *************** function ___lwtoft *****************
  2422 ;; Defined at:
  2423 ;;		line 28 in file "/Applications/microchip/xc8/v1.41/sources/common/lwtoft.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  c               2    8[COMMON] unsigned int 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  3    8[COMMON] float 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2, status,0, pclath, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1
  2437 ;;      Params:         3       0       0
  2438 ;;      Locals:         0       0       0
  2439 ;;      Temps:          1       0       0
  2440 ;;      Totals:         4       0       0
  2441 ;;Total ram usage:        4 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    1
  2444 ;; This function calls:
  2445 ;;		___ftpack
  2446 ;; This function is called by:
  2447 ;;		_main
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           
  2452                           ;psect for function ___lwtoft
  2453  0212                     ___lwtoft:	
  2454                           
  2455                           ;incstack = 0
  2456                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2457  0212  0878               	movf	___lwtoft@c,w
  2458  0213  00F0               	movwf	___ftpack@arg
  2459  0214  0879               	movf	___lwtoft@c+1,w
  2460  0215  00F1               	movwf	___ftpack@arg+1
  2461  0216  01F2               	clrf	___ftpack@arg+2
  2462  0217  308E               	movlw	142
  2463  0218  00FB               	movwf	??___lwtoft
  2464  0219  087B               	movf	??___lwtoft,w
  2465  021A  00F3               	movwf	___ftpack@exp
  2466  021B  01F4               	clrf	___ftpack@sign
  2467  021C  227A               	fcall	___ftpack
  2468  021D  0870               	movf	?___ftpack,w
  2469  021E  00F8               	movwf	?___lwtoft
  2470  021F  0871               	movf	?___ftpack+1,w
  2471  0220  00F9               	movwf	?___lwtoft+1
  2472  0221  0872               	movf	?___ftpack+2,w
  2473  0222  00FA               	movwf	?___lwtoft+2
  2474  0223  0008               	return
  2475  0224                     __end_of___lwtoft:	
  2476                           
  2477                           	psect	text10
  2478  027A                     __ptext10:	
  2479 ;; *************** function ___ftpack *****************
  2480 ;; Defined at:
  2481 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/float.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  arg             3    0[COMMON] unsigned um
  2484 ;;  exp             1    3[COMMON] unsigned char 
  2485 ;;  sign            1    4[COMMON] unsigned char 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  3    0[COMMON] float 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1
  2497 ;;      Params:         5       0       0
  2498 ;;      Locals:         0       0       0
  2499 ;;      Temps:          3       0       0
  2500 ;;      Totals:         8       0       0
  2501 ;;Total ram usage:        8 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		___awtoft
  2507 ;;		___ftadd
  2508 ;;		___ftdiv
  2509 ;;		___ftmul
  2510 ;;		___lwtoft
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           
  2515                           ;psect for function ___ftpack
  2516  027A                     ___ftpack:	
  2517                           
  2518                           ;incstack = 0
  2519                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2520  027A  0873               	movf	___ftpack@exp,w
  2521  027B  1903               	btfsc	3,2
  2522  027C  2A82               	goto	l953
  2523  027D  0872               	movf	___ftpack@arg+2,w
  2524  027E  0471               	iorwf	___ftpack@arg+1,w
  2525  027F  0470               	iorwf	___ftpack@arg,w
  2526  0280  1D03               	skipz
  2527  0281  2A95               	goto	l959
  2528  0282                     l953:	
  2529  0282  3000               	movlw	0
  2530  0283  00F0               	movwf	?___ftpack
  2531  0284  3000               	movlw	0
  2532  0285  00F1               	movwf	?___ftpack+1
  2533  0286  3000               	movlw	0
  2534  0287  00F2               	movwf	?___ftpack+2
  2535  0288  0008               	return
  2536  0289                     l957:	
  2537  0289  3001               	movlw	1
  2538  028A  00F5               	movwf	??___ftpack
  2539  028B  0875               	movf	??___ftpack,w
  2540  028C  07F3               	addwf	___ftpack@exp,f
  2541  028D  3001               	movlw	1
  2542  028E                     u895:	
  2543  028E  1003               	clrc
  2544  028F  0CF2               	rrf	___ftpack@arg+2,f
  2545  0290  0CF1               	rrf	___ftpack@arg+1,f
  2546  0291  0CF0               	rrf	___ftpack@arg,f
  2547  0292  3EFF               	addlw	-1
  2548  0293  1D03               	skipz
  2549  0294  2A8E               	goto	u895
  2550  0295                     l959:	
  2551  0295  30FE               	movlw	254
  2552  0296  0572               	andwf	___ftpack@arg+2,w
  2553  0297  1903               	btfsc	3,2
  2554  0298  2AB0               	goto	l316
  2555  0299  2A89               	goto	l957
  2556  029A                     l961:	
  2557  029A  3001               	movlw	1
  2558  029B  00F5               	movwf	??___ftpack
  2559  029C  0875               	movf	??___ftpack,w
  2560  029D  07F3               	addwf	___ftpack@exp,f
  2561  029E  3001               	movlw	1
  2562  029F  07F0               	addwf	___ftpack@arg,f
  2563  02A0  3000               	movlw	0
  2564  02A1  1803               	skipnc
  2565  02A2  3001               	movlw	1
  2566  02A3  07F1               	addwf	___ftpack@arg+1,f
  2567  02A4  3000               	movlw	0
  2568  02A5  1803               	skipnc
  2569  02A6  3001               	movlw	1
  2570  02A7  07F2               	addwf	___ftpack@arg+2,f
  2571  02A8  3001               	movlw	1
  2572  02A9                     u915:	
  2573  02A9  1003               	clrc
  2574  02AA  0CF2               	rrf	___ftpack@arg+2,f
  2575  02AB  0CF1               	rrf	___ftpack@arg+1,f
  2576  02AC  0CF0               	rrf	___ftpack@arg,f
  2577  02AD  3EFF               	addlw	-1
  2578  02AE  1D03               	skipz
  2579  02AF  2AA9               	goto	u915
  2580  02B0                     l316:	
  2581  02B0  30FF               	movlw	255
  2582  02B1  0572               	andwf	___ftpack@arg+2,w
  2583  02B2  1903               	btfsc	3,2
  2584  02B3  2ABF               	goto	l969
  2585  02B4  2A9A               	goto	l961
  2586  02B5                     l967:	
  2587  02B5  3001               	movlw	1
  2588  02B6  02F3               	subwf	___ftpack@exp,f
  2589  02B7  3001               	movlw	1
  2590  02B8                     u935:	
  2591  02B8  1003               	clrc
  2592  02B9  0DF0               	rlf	___ftpack@arg,f
  2593  02BA  0DF1               	rlf	___ftpack@arg+1,f
  2594  02BB  0DF2               	rlf	___ftpack@arg+2,f
  2595  02BC  3EFF               	addlw	-1
  2596  02BD  1D03               	skipz
  2597  02BE  2AB8               	goto	u935
  2598  02BF                     l969:	
  2599  02BF  1BF1               	btfsc	___ftpack@arg+1,7
  2600  02C0  2AC5               	goto	l323
  2601  02C1  3002               	movlw	2
  2602  02C2  0273               	subwf	___ftpack@exp,w
  2603  02C3  1803               	skipnc
  2604  02C4  2AB5               	goto	l967
  2605  02C5                     l323:	
  2606  02C5  1873               	btfsc	___ftpack@exp,0
  2607  02C6  2ACD               	goto	l324
  2608  02C7  30FF               	movlw	255
  2609  02C8  05F0               	andwf	___ftpack@arg,f
  2610  02C9  307F               	movlw	127
  2611  02CA  05F1               	andwf	___ftpack@arg+1,f
  2612  02CB  30FF               	movlw	255
  2613  02CC  05F2               	andwf	___ftpack@arg+2,f
  2614  02CD                     l324:	
  2615  02CD  1003               	clrc
  2616  02CE  0CF3               	rrf	___ftpack@exp,f
  2617  02CF  0873               	movf	___ftpack@exp,w
  2618  02D0  00F5               	movwf	??___ftpack
  2619  02D1  01F6               	clrf	??___ftpack+1
  2620  02D2  01F7               	clrf	??___ftpack+2
  2621  02D3  3010               	movlw	16
  2622  02D4                     u975:	
  2623  02D4  1003               	clrc
  2624  02D5  0DF5               	rlf	??___ftpack,f
  2625  02D6  0DF6               	rlf	??___ftpack+1,f
  2626  02D7  0DF7               	rlf	??___ftpack+2,f
  2627  02D8  3EFF               	addlw	-1
  2628  02D9  1D03               	skipz
  2629  02DA  2AD4               	goto	u975
  2630  02DB  0875               	movf	??___ftpack,w
  2631  02DC  04F0               	iorwf	___ftpack@arg,f
  2632  02DD  0876               	movf	??___ftpack+1,w
  2633  02DE  04F1               	iorwf	___ftpack@arg+1,f
  2634  02DF  0877               	movf	??___ftpack+2,w
  2635  02E0  04F2               	iorwf	___ftpack@arg+2,f
  2636  02E1  0874               	movf	___ftpack@sign,w
  2637  02E2  1903               	btfsc	3,2
  2638  02E3  0008               	return
  2639  02E4  17F2               	bsf	___ftpack@arg+2,7
  2640  02E5  0008               	return
  2641  02E6                     __end_of___ftpack:	
  2642  007E                     btemp	set	126	;btemp
  2643  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     73      74
    BANK1            32     20      20

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _pwmGenerator->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_pwmGenerator
    _pwmGenerator->___fttol
    ___fttol->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv

Critical Paths under _main in BANK1

    _main->_pwmGenerator

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   15395
                                             63 BANK0     10    10      0
                            ___ftdiv
                            ___fttol
                           ___lwtoft
                             ___wmul
                               _init
                       _pwmGenerator
 ---------------------------------------------------------------------------------
 (1) _pwmGenerator                                        27    25      2   10550
                                             59 BANK0      4     2      2
                                              0 BANK1     20    20      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             45 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2496
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2344
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    2772
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1996
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1821
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   ___wmul
   _init
   _pwmGenerator
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       1       3        1.2%
BANK0               50     49      4A       4       92.5%
BANK1               20     14      14       5       62.5%
ABS                  0      0      6C       6        0.0%
BITBANK1            20      0       0       7        0.0%
DATA                 0      0      6C       8        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Mar  5 21:39:12 2017

            __CFG_CP$OFF 0000      ___wmul@multiplicand 0072             ___ftadd@exp1 004C  
           ___ftadd@exp2 004B             ___ftadd@sign 004A                      l323 02C5  
                    l155 0263                      l324 02CD                      l316 02B0  
                    l407 03D5                      l347 0619                      l961 029A  
                    l953 0282                      l957 0289                      l967 02B5  
                    l959 0295                      l969 02BF                      l989 0244  
                    l999 059A                      _PR2 0092             __CFG_CPD$OFF 0000  
                    u915 02A9                      u935 02B8                      u975 02D4  
                    u895 028E                      _WPU 0095             ___ftdiv@cntr 003A  
           ___ftdiv@sign 003F                     l1003 05A1                     l1021 05CA  
                   l1031 05F0                     l1111 04BA                     l1041 0615  
                   l1033 05F4                     l1009 05B0                     l1027 05DF  
                   l1045 062B                     l1029 05EB                     l1141 0537  
                   l1133 051F                     l1117 04D0                     l1039 0609  
                   l1049 063D                     l1145 0547                     l1129 050F  
                   l1161 037B                     l1241 07A9                     l1321 0306  
                   l1313 0300                     l1059 0660                     l1075 041C  
                   l1251 07B6                     l1235 0785                     l1227 06B9  
                   l1069 0406                     l1181 03BD                     l1245 07B1  
                   l1247 07B2                     l1255 07BA                     l1335 0324  
                   l1273 025B                     l1097 0480                     l1089 0461  
                   l1193 03E6                     l1249 07B4                     l1257 07CB  
                   l1187 03CA                     l1179 03AD                     l1189 03D8  
                   l1365 07C0                     l1299 02ED                     u1125 05E0  
                   u1305 0481                     u1155 05F5                     u1095 05CB  
                   u1185 060A                     u1265 042E                     u1345 04DC  
                   u1505 03AE                     u1275 0440                     u1435 0548  
                   u1355 04EE                     u1285 0462                     u1445 0550  
                   u1295 0473                     u1535 03CC                     u1625 0264  
                   u1385 0520                     _GPIO 0005                     u1635 026B  
                   u1395 0528                     u1475 0382                     u1565 06B7  
                   u1575 0777                     u1585 0783                     u1737 02F7  
                   u1595 07A7                     u1747 035C         pwmGenerator@freq 005B  
       pwmGenerator@duty 00A3         pwmGenerator@tosc 00A6                     _main 02E6  
           ___ftpack@arg 0070                     _init 0224             ___ftpack@exp 0073  
                   btemp 007E                     start 0000            __CFG_IESO$OFF 0000  
           ___ftmul@cntr 002E             ___ftmul@sign 002F             ___fttol@exp1 005A  
           ___fttol@lval 0056                    ?_main 0070                    ?_init 0070  
        __end_of___ftadd 0677            __CFG_WDTE$OFF 0000          __end_of___ftdiv 04A3  
                  _ANSEL 009F          __end_of___ftmul 0572                    _T1CON 0010  
        __end_of___fttol 03EF                    _T2CON 0012                    _T1GSS 00D1  
                  _TMR1H 000F                    _TMR1L 000E             main@got_dist 0349  
         __CFG_FCMEN$OFF 0000            main@t1gp_high 034A            ___awtoft@sign 007D  
          ___ftpack@sign 0074           __CFG_BOREN$OFF 0000                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 07FC  
           __end_of_main 0362             __end_of_init 023A                   ??_main 005F  
          ___fttol@sign1 0055                   ??_init 0070                   _ADCON0 001F  
                 _CCPR1L 0013                   _CMCON0 0019         __end_of___awtoft 0259  
       __end_of___ftpack 02E6         __end_of___lwtoft 0224                   _OSCCON 008F  
                 _TRISIO 0085           __CFG_PWRTE$OFF 0000       pwmGenerator@scaler 00B2  
     pwmGenerator@period 00A0                   ___wmul 0259                ??___ftadd 0046  
              ??___ftdiv 0036                ??___ftmul 0026                ??___fttol 0051  
  ___ftmul@f3_as_product 002B  __end_of__initialization 07FE               ___ftadd@f1 0040  
             ___ftadd@f2 0043               ___ftdiv@f1 0033               ___ftdiv@f2 0030  
             ___ftdiv@f3 003B               ___awtoft@c 0078               ___ftmul@f1 0020  
             ___ftmul@f2 0023               ___fttol@f1 004D           __pcstackCOMMON 0070  
             ___lwtoft@c 0078               __pmaintext 02E6                  ?___wmul 0070  
                _CCP1CON 0015                ?___awtoft 0078                ?___ftpack 0070  
              ?___lwtoft 0078                  ___ftadd 0572                  ___ftdiv 03EF  
        __size_of___wmul 0021                  ___ftmul 04A3                  ___fttol 0362  
             ??___awtoft 007B               ??___ftpack 0075                  __ptext1 0677  
                __ptext2 0362                  __ptext3 04A3                  __ptext4 03EF  
                __ptext5 0572                  __ptext6 023A                  __ptext7 0224  
                __ptext8 0259                  __ptext9 0212               ??___lwtoft 007B  
          ?_pwmGenerator 005B         _pwmGenerator$449 00AB     end_of_initialization 07FE  
         ??_pwmGenerator 005D              ___ftdiv@exp 003E          pwmGenerator@ccp 00AE  
        pwmGenerator@pr2 00B0          pwmGenerator@lsb 00A9              ___ftmul@exp 002A  
         __end_of___wmul 027A            __pbitbssBANK0 0348      start_initialization 07FC  
               ??___wmul 0074        __size_of___awtoft 001F        __size_of___ftpack 006C  
              ___latbits 0000        __size_of___lwtoft 0012            __pcstackBANK0 0020  
          __pcstackBANK1 00A0     __end_of_pwmGenerator 07FC                 ?___ftadd 0040  
               ?___ftdiv 0030                 ?___ftmul 0020                 ?___fttol 004D  
         ___wmul@product 0074        ___wmul@multiplier 0070         __size_of___ftadd 0105  
       __size_of___ftdiv 00B4         __size_of___ftmul 00CF         __size_of___fttol 008D  
               ___awtoft 023A                 ___ftpack 027A                 ___lwtoft 0212  
               __ptext10 027A            __size_of_main 007C    __size_of_pwmGenerator 0185  
          __size_of_init 0016                 main@dist 0065                 main@trig 0348  
           _pwmGenerator 0677          main@pulse_width 0067       __CFG_FOSC$INTOSCIO 0000  
